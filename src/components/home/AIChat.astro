---
---

<div class="fixed bottom-8 right-8 z-50" x-data="{ open: false, messages: [], input: '', loading: false }">
  <!-- Chat Button -->
  <button 
    @click="open = true"
    class="bg-primary-600 text-white p-4 rounded-full shadow-lg hover:bg-primary-700 transition-all duration-300 animate-pulse hover:animate-none flex items-center gap-2"
  >
    <span class="hidden sm:inline">Ask about Switzerland</span>
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
    </svg>
  </button>

  <!-- Chat Modal -->
  <div 
    x-show="open" 
    x-transition:enter="transition ease-out duration-300"
    x-transition:enter-start="opacity-0 transform translate-y-4"
    x-transition:enter-end="opacity-100 transform translate-y-0"
    x-transition:leave="transition ease-in duration-200"
    x-transition:leave-start="opacity-100 transform translate-y-0"
    x-transition:leave-end="opacity-0 transform translate-y-4"
    class="fixed inset-0 z-50 overflow-y-auto"
    style="display: none;"
  >
    <div class="flex items-end justify-end min-h-screen sm:p-4">
      <div class="fixed inset-0 bg-black opacity-25" @click="open = false"></div>
      
      <div class="relative bg-white rounded-t-xl sm:rounded-xl shadow-2xl w-full sm:w-[400px] max-h-[600px] flex flex-col">
        <!-- Header -->
        <div class="p-4 border-b flex justify-between items-center bg-primary-600 text-white rounded-t-xl">
          <h3 class="text-lg font-semibold">Switzerland Relocation Assistant</h3>
          <button @click="open = false" class="text-white/80 hover:text-white">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>

        <!-- Messages -->
        <div class="flex-1 overflow-y-auto p-4 space-y-4">
          <!-- Welcome Message -->
          <template x-if="messages.length === 0">
            <div class="bg-accent-50 p-4 rounded-lg">
              <p class="text-accent-700">
                ðŸ‘‹ Hi! I'm your Swiss relocation assistant. Ask me anything about moving to Switzerland!
              </p>
            </div>
          </template>

          <!-- Chat Messages -->
          <template x-for="message in messages" :key="message.id">
            <div :class="message.role === 'user' ? 'flex justify-end' : 'flex justify-start'">
              <div
                :class="message.role === 'user' 
                  ? 'bg-primary-600 text-white rounded-l-lg rounded-tr-lg' 
                  : 'bg-accent-100 text-accent-800 rounded-r-lg rounded-tl-lg'"
                class="max-w-[80%] p-3"
              >
                <p x-text="message.content"></p>
              </div>
            </div>
          </template>

          <!-- Loading Indicator -->
          <div x-show="loading" class="flex justify-start">
            <div class="bg-accent-100 rounded-lg p-3 animate-pulse">
              <div class="flex space-x-2">
                <div class="w-2 h-2 bg-accent-400 rounded-full"></div>
                <div class="w-2 h-2 bg-accent-400 rounded-full"></div>
                <div class="w-2 h-2 bg-accent-400 rounded-full"></div>
              </div>
            </div>
          </div>
        </div>

        <!-- Input Form -->
        <form 
          @submit.prevent="
            if (!input.trim()) return;
            messages.push({ id: Date.now(), role: 'user', content: input });
            loading = true;
            const currentInput = input;
            input = '';
            fetch('/api/chat', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ message: currentInput })
            })
              .then(res => res.json())
              .then(data => {
                if (data.error) {
                  throw new Error(data.error);
                }
                messages.push({ 
                  id: Date.now(), 
                  role: 'assistant', 
                  content: data.message || 'I apologize, but I am unable to provide an answer at this moment.'
                });
                loading = false;
              })
              .catch(err => {
                messages.push({ id: Date.now(), role: 'assistant', content: 'Sorry, I encountered an error. Please try again.' });
                loading = false;
                console.error('Chat error:', err);
              });
          "
          class="border-t p-4 flex gap-2"
        >
          <input
            type="text"
            x-model="input"
            placeholder="Type your message..."
            class="flex-1 px-4 py-2 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
            :disabled="loading"
          />
          <button 
            type="submit"
            class="bg-primary-600 text-white px-4 py-2 rounded-lg hover:bg-primary-700 disabled:opacity-50"
            :disabled="loading || !input.trim()"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
              <path d="M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z" />
            </svg>
          </button>
        </form>
      </div>
    </div>
  </div>
</div>