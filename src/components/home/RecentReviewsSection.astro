---
import { getCollection } from 'astro:content';
import { fetchGoogleReviews } from '../../utils/google-reviews';

// Get all companies
const companies = await getCollection('companies');

// Function to get reviews for a company
async function getCompanyReviews(company: any) {
  if (!company.data.googleMyBusinessUrl) return null;
  
  try {
    const apiKey = import.meta.env.SERPAPI_KEY || process.env.SERPAPI_KEY;
    if (!apiKey) {
      console.log('No SerpAPI key found');
      return null;
    }
    
    const businessData = await fetchGoogleReviews(company.data.googleMyBusinessUrl, apiKey);
    if (businessData && businessData.reviews && businessData.reviews.length > 0) {
      return {
        companyName: company.data.name,
        companySlug: company.slug,
        companyRating: businessData.rating || 4.5,
        reviews: businessData.reviews.slice(0, 3) // Take first 3 reviews
      };
    }
  } catch (error) {
    console.log(`No reviews found for ${company.data.name}`);
  }
  return null;
}

// Always include PrimeRelocation first
const primeRelocation = companies.find(c => c.slug === 'prime-relocation');
let recentReviews = [];

if (primeRelocation) {
  const primeReviews = await getCompanyReviews(primeRelocation);
  if (primeReviews && primeReviews.reviews.length > 0) {
    recentReviews.push({
      author: primeReviews.reviews[0].author || "Verified Client",
      rating: primeReviews.reviews[0].rating || 5,
      text: primeReviews.reviews[0].text || "Exceptional service from start to finish. Highly recommend!",
      date: primeReviews.reviews[0].date || "Recent",
      companyName: primeReviews.companyName,
      companySlug: primeReviews.companySlug,
      companyRating: primeReviews.companyRating
    });
  }
}

// Get other companies with reviews (excluding PrimeRelocation)
const otherCompanies = companies.filter(c => c.slug !== 'prime-relocation' && c.data.googleMyBusinessUrl);

// Shuffle and get 2 more companies
const shuffledCompanies = otherCompanies.sort(() => Math.random() - 0.5).slice(0, 2);

for (const company of shuffledCompanies) {
  const companyReviews = await getCompanyReviews(company);
  if (companyReviews && companyReviews.reviews.length > 0) {
    recentReviews.push({
      author: companyReviews.reviews[0].author || "Verified Client",
      rating: companyReviews.reviews[0].rating || 5,
      text: companyReviews.reviews[0].text || "Great service and professional support.",
      date: companyReviews.reviews[0].date || "Recent",
      companyName: companyReviews.companyName,
      companySlug: companyReviews.companySlug,
      companyRating: companyReviews.companyRating
    });
  }
}

// Fallback if we don't have enough real reviews
while (recentReviews.length < 3) {
  const fallbackReviews = [
    {
      author: "Sarah M.",
      rating: 5,
      text: "Exceptional service from start to finish. They made our move to Zurich seamless and stress-free. Highly recommend!",
      date: "2 weeks ago",
      companyName: "Executive Relocation",
      companySlug: "executive-relocation",
      companyRating: 4.6
    },
    {
      author: "Michael K.",
      rating: 5,
      text: "Professional team that went above and beyond. They helped us find the perfect home in Geneva and handled all the paperwork.",
      date: "1 week ago",
      companyName: "Crown Relocations",
      companySlug: "crown-relocations",
      companyRating: 4.2
    }
  ];
  
  if (recentReviews.length < 3) {
    recentReviews.push(fallbackReviews[recentReviews.length - 1] || fallbackReviews[0]);
  }
}

// Ensure we only show 3 reviews
recentReviews = recentReviews.slice(0, 3);
---

<section class="py-16 bg-gray-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-12">
      <h2 class="text-3xl font-bold text-gray-900 mb-4">
        Trusted <span class="gradient-text">Professionals</span>
      </h2>
      <p class="text-lg text-gray-600 max-w-2xl mx-auto">
        Real client experiences from verified Google Reviews of trusted Swiss relocation companies
      </p>
    </div>

    <div class="grid md:grid-cols-3 gap-8 reviews-container">
      {recentReviews.map((review, index) => (
        <a 
          href={`/companies/${review.companySlug}`}
          class={`block bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 cursor-pointer group review-card`}
          style={`animation-delay: ${index * 0.2}s`}
        >
          <!-- Star Rating -->
          <div class="flex items-center mb-4">
            <div class="flex text-yellow-400">
              {Array.from({ length: 5 }, (_, i) => (
                <svg
                  class={`w-5 h-5 ${i < review.rating ? 'text-yellow-400' : 'text-gray-300'}`}
                  fill="currentColor"
                  viewBox="0 0 20 20"
                >
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                </svg>
              ))}
            </div>
            <span class="ml-2 text-sm text-gray-500">{review.date}</span>
          </div>

          <!-- Review Text -->
          <blockquote class="text-gray-700 mb-4 leading-relaxed line-clamp-4">
            "{review.text}"
          </blockquote>

          <!-- Author and Company -->
          <div class="border-t pt-4">
            <div class="flex items-center justify-between">
              <div>
                <p class="font-semibold text-gray-900">{review.author}</p>
                <p class="text-sm text-gray-500">Google Review</p>
              </div>
              <div class="text-right">
                <span class="text-primary-600 group-hover:text-primary-700 font-medium text-sm transition-colors">
                  {review.companyName}
                </span>
                <div class="flex items-center justify-end mt-1">
                  <svg class="w-4 h-4 text-yellow-400 mr-1" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                  </svg>
                  <span class="text-sm text-gray-600">{review.companyRating}</span>
                </div>
              </div>
            </div>
          </div>
        </a>
      ))}
    </div>

    <!-- Stats Section -->
    <div class="bg-white rounded-3xl shadow-xl p-12 border border-gray-100 mt-16">
      <div class="grid grid-cols-2 md:grid-cols-4 gap-8 text-center">
        <div class="space-y-2">
          <div class="text-4xl font-bold gradient-text">5,000+</div>
          <div class="text-gray-600 font-medium">Successful Relocations</div>
        </div>
        <div class="space-y-2">
          <div class="text-4xl font-bold gradient-text">500+</div>
          <div class="text-gray-600 font-medium">Verified Partners</div>
        </div>
        <div class="space-y-2">
          <div class="text-4xl font-bold gradient-text">26</div>
          <div class="text-gray-600 font-medium">Swiss Cantons</div>
        </div>
        <div class="space-y-2">
          <div class="text-4xl font-bold gradient-text">4.9</div>
          <div class="text-gray-600 font-medium">Average Rating</div>
        </div>
      </div>
    </div>

    <!-- View All Reviews CTA -->
    <div class="text-center mt-12">
      <a 
        href="/companies" 
        class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 transition-colors duration-200"
      >
        View All Companies & Reviews
        <svg class="ml-2 -mr-1 w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd" />
        </svg>
      </a>
    </div>
  </div>
</section>

<style>
  .review-card {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease-out forwards;
  }

  .line-clamp-4 {
    display: -webkit-box;
    -webkit-line-clamp: 4;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .reviews-container {
    position: relative;
  }

  /* Smooth transitions for content changes */
  .review-card {
    transition: all 0.3s ease-in-out;
  }
</style> 