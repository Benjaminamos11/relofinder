---
const { company } = Astro.props;

// Handle both content collection and API data structures
const isContentCollection = company.data;
const companyData = isContentCollection ? company.data : company;

// Convert regions array to string
const regions = Array.isArray(companyData.regions) ? companyData.regions.join(', ') : 'Nationwide';

// Get review count from rating object or fallback
const reviewCount = companyData.rating?.reviews || companyData.reviewCount || 0;

// Get rating score
const rating = companyData.rating?.score || companyData.rating || companyData.google_rating || 0;

// Get company ID and name
const companyId = companyData.id || company.slug;
const companyName = companyData.name;
const companyLogo = companyData.logo;
const companyDescription = companyData.description;

// Get services, specializations, and languages
const services = companyData.services || [];
const specializations = companyData.specializations || [];
const languages = companyData.languages || [];

// Convert service IDs to readable names
const serviceNames: Record<string, string> = {
  'home-search': 'Home Search',
  'immigration-services': 'Immigration',
  'move-management': 'Move Management',
  'education': 'Education',
  'advisory-services': 'Advisory',
  'settling-in': 'Settling-in',
  'departure-repatriation': 'Departure',
  'banking': 'Banking',
  'visa': 'Visa Services'
};

// Convert region IDs to readable names
const regionNames: Record<string, string> = {
  'zurich': 'ZÃ¼rich',
  'geneva': 'Geneva',
  'basel': 'Basel',
  'bern': 'Bern',
  'lausanne': 'Lausanne',
  'zug': 'Zug',
  'lucerne': 'Lucerne'
};

// Format regions with proper names
const formattedRegions = Array.isArray(companyData.regions) 
  ? companyData.regions.map((region: string) => regionNames[region] || region).join(', ')
  : 'Nationwide';
---

<a href={`/companies/${companyId}`} class="card group h-full hover:shadow-card-hover transition-all duration-300">
  <div class="p-6">
    <div class="mb-4 flex justify-between items-start">
      <div class="w-16 h-16 rounded-lg bg-accent-100 p-2 flex items-center justify-center overflow-hidden">
        <img 
          src={companyLogo} 
          alt={`${companyName} logo`} 
          class="w-full h-full object-contain rounded"
        />
      </div>
      <div class="flex items-center">
        <span class="text-yellow-500 font-bold mr-1">{rating.toFixed(1)}</span>
        <div class="flex text-yellow-400">
          {Array(5).fill(0).map((_, i) => (
            <svg xmlns="http://www.w3.org/2000/svg" class={`h-4 w-4 ${i < Math.floor(rating) ? 'text-yellow-400' : 'text-gray-300'}`} viewBox="0 0 20 20" fill="currentColor">
              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
            </svg>
          ))}
        </div>
        <span class="text-xs text-accent-500 ml-1">({reviewCount})</span>
      </div>
    </div>
    
    <h3 class="text-xl font-semibold mb-2 group-hover:text-secondary-600 transition-colors">{companyName}</h3>
    <p class="text-accent-600 mb-3 text-sm line-clamp-2">{companyDescription}</p>
    
    <div class="space-y-2 mb-4">      
      <div class="flex items-start text-sm">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-secondary-600 mr-2 mt-0.5 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
        </svg>
        <span><strong>Regions:</strong> {formattedRegions}</span>
      </div>

      {services.length > 0 && (
        <div class="flex items-start text-sm">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-secondary-600 mr-2 mt-0.5 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
          </svg>
          <span><strong>Services:</strong> {services.map((service: string) => serviceNames[service] || service).join(', ')}</span>
        </div>
      )}

      {specializations.length > 0 && (
        <div class="flex items-start text-sm">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-secondary-600 mr-2 mt-0.5 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
          </svg>
          <span><strong>Specializations:</strong> {specializations.join(', ')}</span>
        </div>
      )}

      {languages.length > 0 && (
        <div class="flex items-start text-sm">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-secondary-600 mr-2 mt-0.5 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129" />
          </svg>
          <span><strong>Languages:</strong> {languages.join(', ')}</span>
        </div>
      )}
    </div>
    
    <div class="mt-auto flex items-center text-secondary-600 font-medium transition-all duration-300 group-hover:translate-x-2">
      View Company
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-1" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
      </svg>
    </div>
  </div>
</a>