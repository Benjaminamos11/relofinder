---
import { Image } from 'astro:assets';
import logoImg from '../../assets/logo.svg';

const popularRegions = [
  { id: 'zurich', name: 'ZÃ¼rich', subtitle: 'Financial Capital' },
  { id: 'geneva', name: 'Geneva', subtitle: 'International Hub' },
  { id: 'basel', name: 'Basel', subtitle: 'Pharma Center' },
  { id: 'bern', name: 'Bern', subtitle: 'Swiss Capital' },
  { id: 'lausanne', name: 'Lausanne', subtitle: 'Olympic City' }
];

const mainServices = [
  { id: 'housing', name: 'Housing & Real Estate', icon: 'home' },
  { id: 'visa', name: 'Visa & Immigration', icon: 'document' },
  { id: 'banking', name: 'Banking & Finance', icon: 'credit-card' },
  { id: 'education', name: 'Education & Schools', icon: 'academic-cap' }
];
---

<header class="bg-white/95 backdrop-blur-md sticky top-0 z-50 shadow-lg border-b border-gray-100 transition-all duration-300" id="main-header">
  <div class="container">
    <div class="flex justify-between items-center py-4">
      
      <!-- Logo -->
      <a href="/" class="flex items-center space-x-3 group">
        <img 
          src="https://res.cloudinary.com/dphbnwjtx/image/upload/c_crop,w_800/v1747217885/background_removed_image_zyuAaozaRtKsPgHdZfl5_Q_1_edbalp.webp" 
          alt="ReloFinder.ch" 
          class="h-10 md:h-12 transition-transform duration-300 group-hover:scale-105"
        />
      </a>

      <!-- Desktop Navigation -->
      <nav class="hidden lg:flex items-center space-x-8">
        
        <!-- Regions Dropdown -->
        <div class="relative group">
          <button class="flex items-center space-x-1 text-gray-700 hover:text-primary-600 font-medium py-2 transition-colors duration-200">
            <span>Regions</span>
            <svg class="w-4 h-4 transition-transform duration-200 group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
            </svg>
          </button>
          
          <!-- Regions Dropdown Menu -->
          <div class="absolute top-full left-0 mt-2 w-80 bg-white rounded-2xl shadow-xl border border-gray-100 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
            <div class="p-6">
              <div class="mb-4">
                <h3 class="text-lg font-bold text-gray-900 mb-2">Popular Regions</h3>
                <p class="text-sm text-gray-600">Discover the best Swiss destinations for expats</p>
              </div>
              
              <div class="space-y-2 mb-4">
                {popularRegions.map((region) => (
                  <a href={`/regions/${region.id}`} class="flex items-center justify-between p-3 rounded-xl hover:bg-gray-50 transition-colors duration-200 group/item">
                    <div>
                      <div class="font-medium text-gray-900 group-hover/item:text-primary-600">{region.name}</div>
                      <div class="text-sm text-gray-500">{region.subtitle}</div>
                    </div>
                    <svg class="w-4 h-4 text-gray-400 group-hover/item:text-primary-600 group-hover/item:translate-x-1 transition-all duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                    </svg>
                  </a>
                ))}
              </div>
              
              <a href="/regions" class="flex items-center justify-center w-full p-3 bg-gradient-to-r from-primary-600 to-primary-700 text-white font-medium rounded-xl hover:shadow-lg transition-all duration-200">
                View All 26 Cantons
                <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"/>
                </svg>
              </a>
            </div>
          </div>
        </div>

        <!-- Services Dropdown -->
        <div class="relative group">
          <button class="flex items-center space-x-1 text-gray-700 hover:text-primary-600 font-medium py-2 transition-colors duration-200">
            <span>Services</span>
            <svg class="w-4 h-4 transition-transform duration-200 group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
            </svg>
          </button>
          
          <!-- Services Dropdown Menu -->
          <div class="absolute top-full left-0 mt-2 w-80 bg-white rounded-2xl shadow-xl border border-gray-100 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
            <div class="p-6">
              <div class="mb-4">
                <h3 class="text-lg font-bold text-gray-900 mb-2">Relocation Services</h3>
                <p class="text-sm text-gray-600">Expert assistance for your Swiss move</p>
              </div>
              
              <div class="grid grid-cols-1 gap-2 mb-4">
                {mainServices.map((service) => (
                  <a href={`/services/${service.id}`} class="flex items-center space-x-3 p-3 rounded-xl hover:bg-gray-50 transition-colors duration-200 group/item">
                    <div class="w-10 h-10 bg-gradient-to-br from-primary-500 to-primary-600 rounded-xl flex items-center justify-center group-hover/item:scale-110 transition-transform duration-200">
                      {service.icon === 'home' && (
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>
                        </svg>
                      )}
                      {service.icon === 'document' && (
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
                        </svg>
                      )}
                      {service.icon === 'credit-card' && (
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"/>
                        </svg>
                      )}
                      {service.icon === 'academic-cap' && (
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path d="M12 14l9-5-9-5-9 5 9 5z"/>
                          <path d="M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z"/>
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222"/>
                        </svg>
                      )}
                    </div>
                    <div class="flex-1">
                      <div class="font-medium text-gray-900 group-hover/item:text-primary-600">{service.name}</div>
                    </div>
                    <svg class="w-4 h-4 text-gray-400 group-hover/item:text-primary-600 group-hover/item:translate-x-1 transition-all duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                    </svg>
                  </a>
                ))}
              </div>
              
              <a href="/services" class="flex items-center justify-center w-full p-3 bg-gradient-to-r from-secondary-600 to-secondary-700 text-white font-medium rounded-xl hover:shadow-lg transition-all duration-200">
                View All Services
                <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"/>
                </svg>
              </a>
            </div>
          </div>
        </div>

        <!-- Other Navigation Items -->
        <a href="/companies" class="text-gray-700 hover:text-primary-600 font-medium py-2 transition-colors duration-200">Directory</a>
        <a href="/blog" class="text-gray-700 hover:text-primary-600 font-medium py-2 transition-colors duration-200">Blog</a>
        <a href="/chat" class="text-gray-700 hover:text-primary-600 font-medium py-2 transition-colors duration-200">AI Assistant</a>
        <a href="/corporate" class="text-gray-700 hover:text-primary-600 font-medium py-2 transition-colors duration-200">For Companies</a>
      </nav>

      <!-- Right Side Actions -->
      <div class="hidden lg:flex items-center space-x-4">
      <!-- Language Selector -->
        <div class="relative">
          <select class="appearance-none bg-white border border-gray-200 rounded-xl px-4 py-2 pr-8 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all duration-200">
            <option value="en">ðŸ‡¬ðŸ‡§ EN</option>
            <option value="de">ðŸ‡©ðŸ‡ª DE</option>
            <option value="fr">ðŸ‡«ðŸ‡· FR</option>
            <option value="it">ðŸ‡®ðŸ‡¹ IT</option>
          </select>
          <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-400">
            <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
              <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
            </svg>
          </div>
        </div>
        
        <!-- CTA Button -->
        <button onclick="openModal('individual-lead-modal')" class="btn-primary px-6 py-2 text-sm">
          Get Started
        </button>
      </div>

      <!-- Mobile Menu Button -->
      <button class="lg:hidden text-gray-700 hover:text-primary-600 transition-colors duration-200" id="menu-toggle" aria-label="Toggle menu">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile Navigation -->
  <div class="lg:hidden bg-white absolute w-full left-0 shadow-xl border-t border-gray-100 transform translate-y-0 transition-transform duration-300 ease-in-out opacity-0 invisible" id="mobile-menu">
    <div class="container py-6 space-y-1">
      
      <!-- Mobile Regions -->
      <div class="space-y-1">
        <div class="text-sm font-semibold text-gray-900 px-4 py-2">Regions</div>
        {popularRegions.map((region) => (
          <a href={`/regions/${region.id}`} class="block px-6 py-2 text-gray-700 hover:text-primary-600 hover:bg-gray-50 transition-all duration-200">
            {region.name}
          </a>
        ))}
        <a href="/regions" class="block px-6 py-2 text-primary-600 font-medium hover:bg-primary-50 transition-all duration-200">
          View All Regions â†’
        </a>
      </div>
      
      <div class="border-t border-gray-100 my-2"></div>
      
      <!-- Mobile Services -->
      <div class="space-y-1">
        <div class="text-sm font-semibold text-gray-900 px-4 py-2">Services</div>
        {mainServices.map((service) => (
          <a href={`/services/${service.id}`} class="block px-6 py-2 text-gray-700 hover:text-primary-600 hover:bg-gray-50 transition-all duration-200">
            {service.name}
          </a>
        ))}
        <a href="/services" class="block px-6 py-2 text-primary-600 font-medium hover:bg-primary-50 transition-all duration-200">
          View All Services â†’
        </a>
      </div>
      
      <div class="border-t border-gray-100 my-2"></div>
      
      <!-- Other Mobile Links -->
      <a href="/companies" class="block px-4 py-3 text-gray-700 hover:text-primary-600 hover:bg-gray-50 font-medium transition-all duration-200">Directory</a>
      <a href="/blog" class="block px-4 py-3 text-gray-700 hover:text-primary-600 hover:bg-gray-50 font-medium transition-all duration-200">Blog</a>
      <a href="/chat" class="block px-4 py-3 text-gray-700 hover:text-primary-600 hover:bg-gray-50 font-medium transition-all duration-200">AI Assistant</a>
      <a href="/corporate" class="block px-4 py-3 text-gray-700 hover:text-primary-600 hover:bg-gray-50 font-medium transition-all duration-200">For Companies</a>
      
      <div class="border-t border-gray-100 pt-4 px-4 space-y-3">
        <button onclick="openModal('individual-lead-modal')" class="w-full btn-primary py-3 text-center">
          Get Started
        </button>
        
        <div class="flex items-center justify-center">
          <select class="appearance-none bg-gray-50 border border-gray-200 rounded-xl px-4 py-2 pr-8 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500">
            <option value="en">ðŸ‡¬ðŸ‡§ English</option>
            <option value="de">ðŸ‡©ðŸ‡ª Deutsch</option>
            <option value="fr">ðŸ‡«ðŸ‡· FranÃ§ais</option>
            <option value="it">ðŸ‡®ðŸ‡¹ Italiano</option>
          </select>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  // Handle mobile menu toggle
  const menuToggle = document.getElementById('menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');
  const header = document.getElementById('main-header');
  
  let isMenuOpen = false;
  
  menuToggle?.addEventListener('click', () => {
    isMenuOpen = !isMenuOpen;
    
    if (isMenuOpen) {
      // Show menu
      mobileMenu?.classList.remove('opacity-0', 'invisible');
      mobileMenu?.classList.add('opacity-100', 'visible');
      
      // Change hamburger to X icon
      if (menuToggle) {
        menuToggle.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        `;
      }
    } else {
      // Hide menu
      mobileMenu?.classList.add('opacity-0', 'invisible');
      mobileMenu?.classList.remove('opacity-100', 'visible');
      
      // Change X back to hamburger icon
      if (menuToggle) {
        menuToggle.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        `;
      }
    }
  });

  // Close mobile menu when clicking outside
  document.addEventListener('click', (e) => {
    if (!header?.contains(e.target as Node) && isMenuOpen) {
      isMenuOpen = false;
      mobileMenu?.classList.add('opacity-0', 'invisible');
      mobileMenu?.classList.remove('opacity-100', 'visible');
      
      // Reset hamburger icon
      if (menuToggle) {
        menuToggle.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        `;
      }
    }
  });

  // Close mobile menu when clicking on links
  const mobileLinks = mobileMenu?.querySelectorAll('a');
  mobileLinks?.forEach(link => {
    link.addEventListener('click', () => {
      isMenuOpen = false;
      mobileMenu?.classList.add('opacity-0', 'invisible');
      mobileMenu?.classList.remove('opacity-100', 'visible');
      
      // Reset hamburger icon
      if (menuToggle) {
        menuToggle.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        `;
      }
    });
  });

  // Header scroll effect
  window.addEventListener('scroll', () => {
    if (window.scrollY > 50) {
      header?.classList.add('shadow-xl');
      header?.classList.remove('shadow-lg');
    } else {
      header?.classList.remove('shadow-xl');
      header?.classList.add('shadow-lg');
    }
  });
</script>