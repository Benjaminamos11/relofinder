---
import { Image } from 'astro:assets';
import logoImg from '../../assets/logo.svg';

const popularRegions = [
  { id: 'zurich', name: 'ZÃ¼rich', subtitle: 'Financial Capital' },
  { id: 'geneva', name: 'Geneva', subtitle: 'International Hub' },
  { id: 'basel', name: 'Basel', subtitle: 'Pharma Center' },
  { id: 'bern', name: 'Bern', subtitle: 'Swiss Capital' },
  { id: 'lausanne', name: 'Lausanne', subtitle: 'Olympic City' }
];

const mainServices = [
  { id: 'housing', name: 'Housing & Real Estate', icon: 'home' },
  { id: 'visa', name: 'Visa & Immigration', icon: 'document' },
  { id: 'banking', name: 'Banking & Finance', icon: 'credit-card' },
  { id: 'education', name: 'Education & Schools', icon: 'academic-cap' }
];
---

<header class="bg-white/95 backdrop-blur-md sticky top-0 z-50 shadow-lg border-b border-gray-100 transition-all duration-300" id="main-header">
  <div class="container">
    <div class="flex items-center justify-between py-4">
      <!-- Hamburger (mobile only) -->
      <button id="menu-toggle" class="lg:hidden flex items-center justify-center w-12 h-12" aria-label="Open menu">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>

      <!-- Logo (always centered) -->
      <div class="flex-1 flex justify-center items-center">
        <a href="/" class="flex items-center space-x-3 group">
          <div class="flex items-center bg-transparent">
            <img 
              src="https://res.cloudinary.com/dphbnwjtx/image/upload/c_fill,w_320,h_80/v1748257779/background_removed_image_EWXUeqkFSJqwJ3xSqQHOUQ_s3w3et.webp"
              alt="ReloFinder.ch Logo"
              class="h-12 md:h-16 w-auto object-contain bg-transparent"
              loading="eager"
              fetchpriority="high"
              decoding="async"
              style="max-width: 100%;"
            />
          </div>
        </a>
      </div>

      <!-- Right column (empty for now, for symmetry) -->
      <div class="w-12 h-12 lg:hidden"></div>

      <!-- Desktop Navigation -->
      <nav class="hidden lg:flex items-center space-x-8">
        
        <!-- Regions Dropdown -->
        <div class="relative group">
          <button class="flex items-center space-x-1 text-gray-700 hover:text-primary-600 font-medium py-2 transition-colors duration-200">
            <span>Regions</span>
            <svg class="w-4 h-4 transition-transform duration-200 group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
            </svg>
          </button>
          
          <!-- Regions Dropdown Menu -->
          <div class="absolute top-full left-0 mt-2 w-80 bg-white rounded-2xl shadow-xl border border-gray-100 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
            <div class="p-6">
              <div class="mb-4">
                <h3 class="text-lg font-bold text-gray-900 mb-2">Popular Regions</h3>
                <p class="text-sm text-gray-600">Discover the best Swiss destinations for expats</p>
              </div>
              
              <div class="space-y-2 mb-4">
                {popularRegions.map((region) => (
                  <a href={`/regions/${region.id}`} class="flex items-center justify-between p-3 rounded-xl hover:bg-gray-50 transition-colors duration-200 group/item">
                    <div>
                      <div class="font-medium text-gray-900 group-hover/item:text-primary-600">{region.name}</div>
                      <div class="text-sm text-gray-500">{region.subtitle}</div>
                    </div>
                    <svg class="w-4 h-4 text-gray-400 group-hover/item:text-primary-600 group-hover/item:translate-x-1 transition-all duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                    </svg>
                  </a>
                ))}
              </div>
              
              <a href="/regions" class="flex items-center justify-center w-full p-3 bg-gradient-to-r from-primary-600 to-primary-700 text-white font-medium rounded-xl hover:shadow-lg transition-all duration-200">
                View All 26 Cantons
                <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"/>
                </svg>
              </a>
            </div>
          </div>
        </div>

        <!-- Services Dropdown -->
        <div class="relative group">
          <button class="flex items-center space-x-1 text-gray-700 hover:text-primary-600 font-medium py-2 transition-colors duration-200">
            <span>Services</span>
            <svg class="w-4 h-4 transition-transform duration-200 group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
            </svg>
          </button>
          
          <!-- Services Dropdown Menu -->
          <div class="absolute top-full left-0 mt-2 w-80 bg-white rounded-2xl shadow-xl border border-gray-100 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
            <div class="p-6">
              <div class="mb-4">
                <h3 class="text-lg font-bold text-gray-900 mb-2">Relocation Services</h3>
                <p class="text-sm text-gray-600">Expert assistance for your Swiss move</p>
              </div>
              
              <div class="grid grid-cols-1 gap-2 mb-4">
                {mainServices.map((service) => (
                  <a href={`/services/${service.id}`} class="flex items-center space-x-3 p-3 rounded-xl hover:bg-gray-50 transition-colors duration-200 group/item">
                    <div class="w-10 h-10 bg-gradient-to-br from-primary-500 to-primary-600 rounded-xl flex items-center justify-center group-hover/item:scale-110 transition-transform duration-200">
                      {service.icon === 'home' && (
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>
                        </svg>
                      )}
                      {service.icon === 'document' && (
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
                        </svg>
                      )}
                      {service.icon === 'credit-card' && (
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"/>
                        </svg>
                      )}
                      {service.icon === 'academic-cap' && (
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path d="M12 14l9-5-9-5-9 5 9 5z"/>
                          <path d="M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z"/>
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222"/>
                        </svg>
                      )}
                    </div>
                    <div class="flex-1">
                      <div class="font-medium text-gray-900 group-hover/item:text-primary-600">{service.name}</div>
                    </div>
                    <svg class="w-4 h-4 text-gray-400 group-hover/item:text-primary-600 group-hover/item:translate-x-1 transition-all duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                    </svg>
                  </a>
                ))}
              </div>
              
              <a href="/services" class="flex items-center justify-center w-full p-3 bg-gradient-to-r from-secondary-600 to-secondary-700 text-white font-medium rounded-xl hover:shadow-lg transition-all duration-200">
                View All Services
                <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"/>
                </svg>
              </a>
            </div>
          </div>
        </div>

        <!-- Other Navigation Items -->
        <a href="/companies" class="text-gray-700 hover:text-primary-600 font-medium py-2 transition-colors duration-200">Directory</a>
        <a href="/blog" class="text-gray-700 hover:text-primary-600 font-medium py-2 transition-colors duration-200">Blog</a>
        <a href="/chat" class="text-gray-700 hover:text-primary-600 font-medium py-2 transition-colors duration-200">AI Assistant</a>
        <a href="/corporate" class="text-gray-700 hover:text-primary-600 font-medium py-2 transition-colors duration-200">For Companies</a>
      </nav>

      <!-- Right Side Actions -->
      <div class="hidden lg:flex items-center space-x-4">
        <!-- Language Selector replaced with small EN -->
        <span class="text-xs text-gray-500 font-semibold px-2">EN</span>
        <!-- CTA Button -->
        <button onclick="openModal('individual-lead-modal')" class="px-7 py-2 text-sm font-bold rounded-xl bg-gradient-to-r from-primary-600 to-primary-700 text-white shadow-lg hover:scale-105 hover:shadow-xl transition-all duration-300">
          Get Started
        </button>
      </div>
    </div>
  </div>
</header>

<!-- Mobile Navigation Menu and Overlay -->
<div id="mobile-menu-overlay" class="fixed inset-0 bg-black/40 z-50 transition-opacity duration-300 opacity-0 pointer-events-none lg:hidden"></div>
<div id="mobile-menu" class="lg:hidden max-h-0 overflow-hidden transition-all duration-300 bg-white shadow-xl rounded-b-2xl fixed left-0 right-0 top-0 z-60">
  <nav class="flex flex-col py-4 px-6 space-y-2" tabindex="-1">
    <a href="/regions" class="text-gray-700 font-medium py-2">Regions</a>
    <a href="/services" class="text-gray-700 font-medium py-2">Services</a>
    <a href="/companies" class="text-gray-700 font-medium py-2">Directory</a>
    <a href="/blog" class="text-gray-700 font-medium py-2">Blog</a>
    <a href="/chat" class="text-gray-700 font-medium py-2">AI Assistant</a>
    <a href="/corporate" class="text-gray-700 font-medium py-2">For Companies</a>
    <span class="text-xs text-gray-500 font-semibold px-2 pt-2">EN</span>
    <button onclick="openModal('individual-lead-modal')" class="w-full mt-2 px-7 py-2 text-sm font-bold rounded-xl bg-gradient-to-r from-primary-600 to-primary-700 text-white shadow-lg hover:scale-105 hover:shadow-xl transition-all duration-300">Get Started</button>
  </nav>
</div>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function() {
    const menuToggle = document.getElementById('menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    const overlay = document.getElementById('mobile-menu-overlay');
    let isMenuOpen = false;
    function openMenu() {
      isMenuOpen = true;
      mobileMenu.style.maxHeight = '500px';
      mobileMenu.classList.add('shadow-2xl');
      overlay.classList.remove('opacity-0','pointer-events-none');
      overlay.classList.add('opacity-100');
      menuToggle.setAttribute('aria-expanded', 'true');
      menuToggle.setAttribute('aria-label', 'Close menu');
      mobileMenu.querySelector('a,button').focus();
    }
    function closeMenu() {
      isMenuOpen = false;
      mobileMenu.style.maxHeight = '0px';
      mobileMenu.classList.remove('shadow-2xl');
      overlay.classList.add('opacity-0','pointer-events-none');
      overlay.classList.remove('opacity-100');
      menuToggle.setAttribute('aria-expanded', 'false');
      menuToggle.setAttribute('aria-label', 'Open menu');
      menuToggle.focus();
    }
    if (menuToggle) {
      menuToggle.setAttribute('aria-controls', 'mobile-menu');
      menuToggle.setAttribute('aria-expanded', 'false');
      menuToggle.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        if (isMenuOpen) closeMenu(); else openMenu();
      });
    }
    if (overlay) {
      overlay.addEventListener('click', closeMenu);
    }
    document.addEventListener('keydown', function(e) {
      if (isMenuOpen && e.key === 'Escape') closeMenu();
    });
    // Trap focus inside menu
    mobileMenu.addEventListener('keydown', function(e) {
      if (!isMenuOpen) return;
      const focusable = mobileMenu.querySelectorAll('a,button');
      const first = focusable[0];
      const last = focusable[focusable.length-1];
      if (e.key === 'Tab') {
        if (e.shiftKey && document.activeElement === first) {
          e.preventDefault(); last.focus();
        } else if (!e.shiftKey && document.activeElement === last) {
          e.preventDefault(); first.focus();
        }
      }
    });
    // Close on link click
    mobileMenu.querySelectorAll('a,button').forEach(el => {
      el.addEventListener('click', closeMenu);
    });
    window.addEventListener('scroll', function() {
      if (window.scrollY > 50) {
        header?.classList.add('shadow-xl');
        header?.classList.remove('shadow-lg');
      } else {
        header?.classList.remove('shadow-xl');
        header?.classList.add('shadow-lg');
      }
    });
  });
</script>