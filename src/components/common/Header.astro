---
/**
 * Premium Polished Header
 * High-density (56px), dark-red gradient CTA, refined hover states
 */

const currentPath = Astro.url.pathname;

const popularRegions = [
  { id: 'zurich', name: 'Zürich', subtitle: 'Financial Capital' },
  { id: 'geneva', name: 'Geneva', subtitle: 'International Hub' },
  { id: 'basel', name: 'Basel', subtitle: 'Pharma Center' },
  { id: 'zug', name: 'Zug', subtitle: 'Crypto Valley' },
  { id: 'lausanne', name: 'Lausanne', subtitle: 'Lake Geneva' },
];

const mainServices = [
  { id: 'housing', name: 'Housing & Real Estate' },
  { id: 'immigration', name: 'Visa & Immigration' },
  { id: 'finance', name: 'Banking & Finance' },
  { id: 'education', name: 'Education & Schools' },
  { id: 'advisory', name: 'Advisory Services' },
  { id: 'settling-in', name: 'Settling-In Support' },
];

function isActive(path: string) {
  return currentPath === path || currentPath.startsWith(path + '/');
}
---

<header id="main-header" class="sticky top-0 z-50 bg-white/95 backdrop-blur-sm border-b border-gray-100 transition-shadow duration-300">
  <div class="mx-auto max-w-7xl px-6 md:px-6 px-4">
    <div class="flex items-center justify-between h-14">
      
      <!-- Logo -->
      <a href="/" class="flex items-center">
        <img 
          src="https://res.cloudinary.com/dphbnwjtx/image/upload/v1751047384/1_bxqv6x.png" 
          alt="ReloFinder" 
          class="h-6 w-auto"
          style="image-rendering: -webkit-optimize-contrast; image-rendering: crisp-edges;"
        />
      </a>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center gap-6">
        <ul class="flex items-center gap-6 text-[15px] font-medium text-gray-800" style="letter-spacing: -0.01em; line-height: 1.35;">
          
          <!-- Regions Dropdown -->
          <li class="relative group">
            <button class={`flex items-center gap-1 py-2 hover:text-[#B61919] transition-colors duration-200 ${isActive('/regions') ? 'text-[#B61919]' : ''}`}>
              Regions
              <svg class="w-3 h-3 transition-transform duration-200 group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
              </svg>
            </button>
            
            <div class="absolute top-full left-0 mt-2 w-64 bg-white rounded-xl shadow-lg border border-gray-100 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 transform translate-y-1 group-hover:translate-y-0">
              <div class="p-3">
                <div class="px-3 py-1.5 mb-1">
                  <div class="text-xs font-semibold text-gray-500 uppercase tracking-wide">Top Regions</div>
                </div>
                <div class="space-y-0.5">
                  {popularRegions.map((region) => (
                    <a 
                      href={`/regions/${region.id}`}
                      class="flex items-center justify-between px-3 py-2 rounded-lg hover:bg-gray-50 transition-colors duration-150 group/item"
                    >
                      <div>
                        <div class="font-medium text-gray-900 group-hover/item:text-[#B61919] text-sm">{region.name}</div>
                        <div class="text-xs text-gray-500">{region.subtitle}</div>
                      </div>
                      <svg class="w-3.5 h-3.5 text-gray-400 opacity-0 group-hover/item:opacity-100 transition-opacity" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                      </svg>
                    </a>
                  ))}
                </div>
                <div class="pt-2 mt-2 border-t border-gray-100 px-3">
                  <a href="/regions" class="block text-center text-xs font-semibold text-[#B61919] hover:underline py-1">
                    View All Regions →
                  </a>
                </div>
              </div>
            </div>
          </li>

          <!-- Services Dropdown -->
          <li class="relative group">
            <button class={`flex items-center gap-1 py-2 hover:text-[#B61919] transition-colors duration-200 ${isActive('/services') ? 'text-[#B61919]' : ''}`}>
              Services
              <svg class="w-3 h-3 transition-transform duration-200 group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
              </svg>
            </button>
            
            <div class="absolute top-full left-0 mt-2 w-64 bg-white rounded-xl shadow-lg border border-gray-100 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 transform translate-y-1 group-hover:translate-y-0">
              <div class="p-3">
                <div class="px-3 py-1.5 mb-1">
                  <div class="text-xs font-semibold text-gray-500 uppercase tracking-wide">Expert Assistance</div>
                </div>
                <div class="space-y-0.5">
                  {mainServices.map((service) => (
                    <a 
                      href={`/services/${service.id}`}
                      class="block px-3 py-2 rounded-lg hover:bg-gray-50 transition-colors duration-150 group/item"
                    >
                      <div class="font-medium text-gray-900 group-hover/item:text-[#B61919] text-sm">{service.name}</div>
                    </a>
                  ))}
                </div>
                <div class="pt-2 mt-2 border-t border-gray-100 px-3">
                  <a href="/services" class="block text-center text-xs font-semibold text-[#B61919] hover:underline py-1">
                    View All Services →
                  </a>
                </div>
              </div>
            </div>
          </li>

          <!-- Direct Links with Active States -->
          <li>
            <a 
              href="/companies" 
              class={`relative py-2 inline-block hover:text-[#B61919] transition-colors duration-200 ${
                isActive('/companies') 
                  ? 'text-[#B61919] after:content-[""] after:absolute after:-bottom-1 after:left-0 after:h-[2px] after:w-full after:rounded-full' 
                  : ''
              }`}
              style={isActive('/companies') ? 'background: linear-gradient(90deg, var(--rf-red-start), var(--rf-red-end)); -webkit-background-clip: text; background-clip: text; --tw-gradient-stops: none;' : ''}
            >
              Directory
              {isActive('/companies') && (
                <span class="absolute -bottom-1 left-0 h-[2px] w-full rounded-full" style="background: var(--rf-grad-red);"></span>
              )}
            </a>
          </li>
          
          <li>
            <a 
              href="/blog" 
              class={`relative py-2 inline-block hover:text-[#B61919] transition-colors duration-200 ${
                isActive('/blog') ? 'text-[#B61919]' : ''
              }`}
            >
              Blog
              {isActive('/blog') && (
                <span class="absolute -bottom-1 left-0 h-[2px] w-full rounded-full" style="background: var(--rf-grad-red);"></span>
              )}
            </a>
          </li>
          
          <li>
            <a 
              href="/corporate" 
              class={`relative py-2 inline-block hover:text-[#B61919] transition-colors duration-200 ${
                isActive('/corporate') ? 'text-[#B61919]' : ''
              }`}
            >
              Corporate Solutions
              {isActive('/corporate') && (
                <span class="absolute -bottom-1 left-0 h-[2px] w-full rounded-full" style="background: var(--rf-grad-red);"></span>
              )}
            </a>
          </li>
        </ul>
      </nav>

      <!-- CTA Button with Dark Red Gradient -->
      <button
        onclick="universalOpenModal({page: 'home'})"
        class="hidden md:inline-flex h-10 px-4 items-center justify-center rounded-lg font-semibold text-white transition-all duration-200 will-change-transform hover:brightness-105 hover:scale-[1.01] focus:outline-none focus:ring-2 focus:ring-red-300/40"
        style="background: var(--rf-grad-red); letter-spacing: -0.01em;"
      >
        Get Quotes
        <svg class="ml-1.5 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </button>

      <!-- Mobile Menu Toggle -->
      <button 
        id="mobile-menu-toggle"
        class="md:hidden p-2 text-gray-800 hover:text-[#B61919] transition-colors"
        aria-label="Toggle menu"
        aria-expanded="false"
        aria-controls="mobile-menu-drawer"
      >
        <svg id="menu-icon-open" class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
        <svg id="menu-icon-close" class="w-6 h-6 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>

    </div>
  </div>
</header>

<!-- Mobile Menu Overlay -->
<div 
  id="mobile-menu-overlay" 
  class="fixed inset-0 bg-black/40 z-40 opacity-0 pointer-events-none transition-opacity duration-300 md:hidden"
  aria-hidden="true"
></div>

<!-- Mobile Menu Drawer -->
<div 
  id="mobile-menu-drawer"
  class="fixed top-0 right-0 bottom-0 w-full max-w-sm bg-white z-50 transform translate-x-full transition-transform duration-300 md:hidden overflow-y-auto shadow-2xl"
  role="dialog"
  aria-modal="true"
  aria-labelledby="mobile-menu-title"
>
  <div class="p-6">
    
    <!-- Mobile Menu Header -->
    <div class="flex items-center justify-between mb-8">
      <h2 id="mobile-menu-title" class="text-xl font-bold text-gray-900">Menu</h2>
      <button 
        id="mobile-menu-close"
        class="p-2 text-gray-600 hover:text-[#B61919] transition-colors"
        aria-label="Close menu"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>

    <!-- Mobile Navigation Links -->
    <nav class="space-y-6">
      
      <!-- Regions -->
      <div>
        <div class="font-semibold text-gray-900 mb-3 text-sm uppercase tracking-wide text-gray-500">Regions</div>
        <div class="pl-4 space-y-2">
          {popularRegions.map((region) => (
            <a href={`/regions/${region.id}`} class="block py-2 text-gray-600 hover:text-[#B61919] transition-colors font-medium">
              {region.name}
            </a>
          ))}
          <a href="/regions" class="block py-2 text-[#B61919] font-semibold">
            View All →
          </a>
        </div>
      </div>

      <!-- Services -->
      <div>
        <div class="font-semibold text-gray-900 mb-3 text-sm uppercase tracking-wide text-gray-500">Services</div>
        <div class="pl-4 space-y-2">
          {mainServices.map((service) => (
            <a href={`/services/${service.id}`} class="block py-2 text-gray-600 hover:text-[#B61919] transition-colors font-medium">
              {service.name}
            </a>
          ))}
          <a href="/services" class="block py-2 text-[#B61919] font-semibold">
            View All →
          </a>
        </div>
      </div>

      <!-- Direct Links -->
      <div class="space-y-4 pt-4 border-t border-gray-100">
        <a href="/companies" class="block py-2 text-gray-900 font-semibold hover:text-[#B61919] transition-colors">
          Directory
        </a>
        <a href="/blog" class="block py-2 text-gray-900 font-semibold hover:text-[#B61919] transition-colors">
          Blog
        </a>
        <a href="/corporate" class="block py-2 text-gray-900 font-semibold hover:text-[#B61919] transition-colors">
          Corporate Solutions
        </a>
      </div>

      <!-- Mobile CTA with Dark Red Gradient -->
      <div class="pt-6">
        <button
          onclick="universalOpenModal({page: 'home'})"
          class="w-full flex items-center justify-center gap-2 h-12 px-6 rounded-lg font-semibold text-white transition-all duration-200 hover:brightness-105 hover:scale-[1.01]"
          style="background: var(--rf-grad-red); letter-spacing: -0.01em;"
        >
          Get Quotes
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </button>
      </div>

    </nav>

  </div>
</div>

<!-- Scroll Shadow & Mobile Menu Scripts -->
<script is:inline>
  // Scroll shadow effect
  const header = document.getElementById('main-header');
  let lastScroll = 0;
  
  function handleScroll() {
    const currentScroll = window.scrollY;
    
    if (currentScroll > 8) {
      header?.classList.add('shadow-[0_6px_24px_rgba(0,0,0,0.06)]');
    } else {
      header?.classList.remove('shadow-[0_6px_24px_rgba(0,0,0,0.06)]');
    }
    
    lastScroll = currentScroll;
  }
  
  // Initial check
  handleScroll();
  window.addEventListener('scroll', handleScroll, { passive: true });

  // Mobile menu functionality
  const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
  const mobileMenuClose = document.getElementById('mobile-menu-close');
  const mobileMenuDrawer = document.getElementById('mobile-menu-drawer');
  const mobileMenuOverlay = document.getElementById('mobile-menu-overlay');
  const menuIconOpen = document.getElementById('menu-icon-open');
  const menuIconClose = document.getElementById('menu-icon-close');
  
  function openMobileMenu() {
    mobileMenuDrawer?.classList.remove('translate-x-full');
    mobileMenuOverlay?.classList.remove('opacity-0', 'pointer-events-none');
    mobileMenuToggle?.setAttribute('aria-expanded', 'true');
    menuIconOpen?.classList.add('hidden');
    menuIconClose?.classList.remove('hidden');
    document.body.style.overflow = 'hidden';
  }
  
  function closeMobileMenu() {
    mobileMenuDrawer?.classList.add('translate-x-full');
    mobileMenuOverlay?.classList.add('opacity-0', 'pointer-events-none');
    mobileMenuToggle?.setAttribute('aria-expanded', 'false');
    menuIconOpen?.classList.remove('hidden');
    menuIconClose?.classList.add('hidden');
    document.body.style.overflow = '';
  }
  
  mobileMenuToggle?.addEventListener('click', openMobileMenu);
  mobileMenuClose?.addEventListener('click', closeMobileMenu);
  mobileMenuOverlay?.addEventListener('click', closeMobileMenu);
  
  // Close on link click
  mobileMenuDrawer?.querySelectorAll('a').forEach(link => {
    link.addEventListener('click', closeMobileMenu);
  });
  
  // Close on escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && !mobileMenuDrawer?.classList.contains('translate-x-full')) {
      closeMobileMenu();
    }
  });
</script>
