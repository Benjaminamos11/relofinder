---
import Layout from '../../layouts/Layout.astro';
import CompanyCard from '../../components/companies/CompanyCard.astro';
import { getCollection } from 'astro:content';

// Fetch companies from content collection
const companies = await getCollection('companies');

// Sort companies by rating (highest first), then by featured status
const sortedCompanies = companies.sort((a, b) => {
  if (a.data.featured && !b.data.featured) return -1;
  if (!a.data.featured && b.data.featured) return 1;
  return b.data.rating.score - a.data.rating.score;
});

// Extract unique values for filters
const allServices = [...new Set(companies.flatMap(c => c.data.services))].sort();
const allRegions = [...new Set(companies.flatMap(c => c.data.regions))].sort();
const allLanguages = [...new Set(companies.flatMap(c => c.data.languages))].sort();

// Get featured companies (top 3 by rating)
const featuredCompanies = sortedCompanies.filter(c => c.data.featured).slice(0, 3);

// Page metadata
const title = 'Relocation Companies Directory Switzerland | Find Trusted Relocators | ReloFinder.ch';
const description = 'Browse our directory of verified relocation companies in Switzerland. Compare services, read reviews, and find the perfect relocation partner for your move to Switzerland.';
---

<Layout title={title} description={description}>
  <!-- Hero Section -->
  <section class="relative py-16 md:py-24 bg-gradient-to-br from-gray-50 to-white overflow-hidden">
    <div class="absolute inset-0 opacity-5">
      <div class="absolute inset-0 bg-repeat" style="background-image: url('data:image/svg+xml,%3Csvg width=%2260%22 height=%2260%22 viewBox=%220 0 60 60%22 xmlns=%22http://www.w3.org/2000/svg%22%3E%3Cg fill=%22none%22 fill-rule=%22evenodd%22%3E%3Cg fill=%22%230ea5e9%22 fill-opacity=%220.1%22%3E%3Cpath d=%22M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z%22/%3E%3C/g%3E%3C/g%3E%3C/svg%3E');"></div>
    </div>

    <div class="container relative">
      <div class="max-w-6xl mx-auto text-center">
        <!-- Breadcrumb -->
        <nav class="mb-8">
          <ol class="flex items-center justify-center space-x-2 text-sm text-gray-600">
            <li><a href="/" class="hover:text-primary-600 transition-colors">Home</a></li>
            <li><span class="text-gray-400">/</span></li>
            <li class="text-gray-900 font-medium">Relocation Companies</li>
          </ol>
        </nav>

        <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold mb-6">
          Find Your Perfect <span class="gradient-text">Relocation Partner</span>
        </h1>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto mb-12">
          Browse {companies.length} verified relocation companies in Switzerland. Compare services, read reviews, and connect with trusted professionals who specialize in making your move seamless.
        </p>

        <!-- Quick Stats -->
        <div class="grid grid-cols-2 md:grid-cols-4 gap-6 max-w-4xl mx-auto">
          <div class="bg-white rounded-xl p-6 shadow-lg">
            <div class="text-3xl font-bold text-primary-600 mb-2">{companies.length}</div>
            <div class="text-sm text-gray-600">Verified Companies</div>
          </div>
          <div class="bg-white rounded-xl p-6 shadow-lg">
            <div class="text-3xl font-bold text-secondary-600 mb-2">{allServices.length}</div>
            <div class="text-sm text-gray-600">Service Types</div>
          </div>
          <div class="bg-white rounded-xl p-6 shadow-lg">
            <div class="text-3xl font-bold text-primary-600 mb-2">{allRegions.length}</div>
            <div class="text-sm text-gray-600">Regions Covered</div>
          </div>
          <div class="bg-white rounded-xl p-6 shadow-lg">
            <div class="text-3xl font-bold text-secondary-600 mb-2">4.7</div>
            <div class="text-sm text-gray-600">Average Rating</div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Featured Companies -->
  {featuredCompanies.length > 0 && (
    <section class="py-16 bg-gradient-to-br from-primary-50 to-secondary-50">
      <div class="container">
        <div class="text-center mb-12">
          <span class="inline-block px-4 py-2 rounded-full bg-white text-primary-700 font-medium text-sm mb-4">
            Featured Partners
          </span>
          <h2 class="text-3xl md:text-4xl font-bold mb-4">
            Top-Rated <span class="gradient-text">Relocation Companies</span>
          </h2>
          <p class="text-xl text-gray-600 max-w-2xl mx-auto">
            Our featured partners have consistently delivered exceptional service to expats moving to Switzerland
          </p>
        </div>

        <div class="grid md:grid-cols-3 gap-8">
          {featuredCompanies.map((company) => (
            <div class="bg-white rounded-2xl shadow-xl p-8 hover:shadow-2xl transition-all duration-300 border-2 border-primary-200">
              <div class="flex items-center justify-between mb-6">
                <div class="flex-1">
                  <h3 class="text-xl font-bold">{company.data.name}</h3>
                </div>
                <span class="bg-gradient-to-r from-yellow-400 to-yellow-500 text-yellow-900 px-3 py-1 rounded-full text-sm font-bold">
                  ‚≠ê Featured
                </span>
              </div>
              
              <h3 class="text-xl font-bold mb-3">{company.data.name}</h3>
              <p class="text-gray-600 mb-4 line-clamp-2">{company.data.description}</p>
              
              <div class="flex items-center mb-4">
                <div class="flex text-yellow-400 mr-2">
                  {Array(5).fill(0).map((_, i) => (
                    <svg class={"w-5 h-5 " + (i < Math.floor(company.data.rating.score) ? 'text-yellow-400' : 'text-gray-300')} fill="currentColor" viewBox="0 0 20 20">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                    </svg>
                  ))}
                </div>
                <span class="text-gray-600">{company.data.rating.score} ({company.data.rating.reviews} reviews)</span>
              </div>

              <div class="border-t pt-4">
                <p class="text-sm text-gray-600 mb-3">
                  <strong>Services:</strong> {company.data.services.slice(0, 3).join(', ')}
                  {company.data.services.length > 3 && ` +${company.data.services.length - 3} more`}
                </p>
                <p class="text-sm text-gray-600 mb-4">
                  <strong>Regions:</strong> {company.data.regions.slice(0, 3).join(', ')}
                </p>
                <a href={"/companies/" + company.data.id} class="btn-primary w-full text-center">
                  View Details
                </a>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Filters and Directory -->
  <section class="py-16 bg-gray-50">
    <div class="container">
      <div class="grid lg:grid-cols-4 gap-8">
        <!-- Sidebar Filters -->
        <div class="lg:col-span-1">
          <div class="bg-white rounded-xl shadow-lg p-6 sticky top-24">
            <h3 class="text-lg font-bold mb-6 flex items-center">
              <svg class="w-5 h-5 mr-2 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"/>
              </svg>
              Filter Companies
            </h3>

            <!-- Search -->
            <div class="mb-6">
              <label class="block text-sm font-medium text-gray-700 mb-2">Search</label>
              <input 
                type="text" 
                id="searchInput"
                placeholder="Company name or keyword..."
                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
              />
            </div>

            <!-- Service Type Filter -->
            <div class="mb-6">
              <label class="block text-sm font-medium text-gray-700 mb-2">Service Type</label>
              <div class="space-y-2 max-h-48 overflow-y-auto">
                {allServices.map(service => (
                  <label class="flex items-center">
                    <input 
                      type="checkbox" 
                      value={service}
                      class="service-filter mr-2 text-primary-600 rounded focus:ring-primary-500"
                    />
                    <span class="text-sm text-gray-700">{service}</span>
                  </label>
                ))}
              </div>
            </div>

            <!-- Region Filter -->
            <div class="mb-6">
              <label class="block text-sm font-medium text-gray-700 mb-2">Region</label>
              <div class="space-y-2 max-h-48 overflow-y-auto">
                {allRegions.map(region => (
                  <label class="flex items-center">
                    <input 
                      type="checkbox" 
                      value={region}
                      class="region-filter mr-2 text-primary-600 rounded focus:ring-primary-500"
                    />
                    <span class="text-sm text-gray-700">{region}</span>
                  </label>
                ))}
              </div>
            </div>

            <!-- Language Filter -->
            <div class="mb-6">
              <label class="block text-sm font-medium text-gray-700 mb-2">Language</label>
              <div class="space-y-2 max-h-48 overflow-y-auto">
                {allLanguages.map(language => (
                  <label class="flex items-center">
                    <input 
                      type="checkbox" 
                      value={language}
                      class="language-filter mr-2 text-primary-600 rounded focus:ring-primary-500"
                    />
                    <span class="text-sm text-gray-700">{language}</span>
                  </label>
                ))}
              </div>
            </div>

            <!-- Rating Filter -->
            <div class="mb-6">
              <label class="block text-sm font-medium text-gray-700 mb-2">Minimum Rating</label>
              <select id="ratingFilter" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500">
                <option value="">All Ratings</option>
                <option value="4.5">4.5+ Stars</option>
                <option value="4.0">4.0+ Stars</option>
                <option value="3.5">3.5+ Stars</option>
                <option value="3.0">3.0+ Stars</option>
              </select>
            </div>

            <!-- Clear Filters -->
            <button id="clearFilters" class="w-full bg-gray-200 text-gray-700 py-2 rounded-lg hover:bg-gray-300 transition-colors">
              Clear All Filters
            </button>
          </div>
        </div>

        <!-- Companies Grid -->
        <div class="lg:col-span-3">
          <!-- Results Header -->
          <div class="bg-white rounded-xl shadow-lg p-6 mb-6">
            <div class="flex flex-col md:flex-row md:items-center md:justify-between">
              <h2 class="text-2xl font-bold mb-4 md:mb-0">
                <span id="resultsCount">{sortedCompanies.length}</span> Relocation Companies
              </h2>
              <div class="flex items-center space-x-4">
                <label class="text-sm text-gray-600">Sort by:</label>
                <select id="sortSelect" class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500">
                  <option value="rating">Highest Rated</option>
                  <option value="reviews">Most Reviews</option>
                  <option value="name">Name (A-Z)</option>
                  <option value="featured">Featured First</option>
                </select>
              </div>
            </div>
          </div>

          <!-- Companies List -->
          <div id="companiesGrid" class="grid md:grid-cols-2 gap-6">
            {sortedCompanies.map(company => (
              <div 
                class="company-card bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden"
                data-name={company.data.name.toLowerCase()}
                data-services={company.data.services.join(',').toLowerCase()}
                data-regions={company.data.regions.join(',').toLowerCase()}
                data-languages={company.data.languages.join(',').toLowerCase()}
                data-rating={company.data.rating.score}
                data-reviews={company.data.rating.reviews}
                data-featured={company.data.featured ? 'true' : 'false'}
              >
                <div class="p-6">
                  <div class="flex items-start justify-between mb-4">
                    <div class="flex-1">
                      <h3 class="text-xl font-bold mb-2">{company.data.name}</h3>
                    </div>
                    {company.data.verified && (
                      <span class="bg-green-100 text-green-800 text-xs font-medium px-2.5 py-0.5 rounded-full">
                        ‚úì Verified
                      </span>
                    )}
                  </div>

                  <h3 class="text-xl font-bold mb-2">{company.data.name}</h3>
                  <p class="text-gray-600 mb-4 line-clamp-2">{company.data.description}</p>

                  <div class="flex items-center mb-4">
                    <div class="flex text-yellow-400 mr-2">
                      {Array(5).fill(0).map((_, i) => (
                        <svg class={"w-4 h-4 " + (i < Math.floor(company.data.rating.score) ? 'text-yellow-400' : 'text-gray-300')} fill="currentColor" viewBox="0 0 20 20">
                          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                        </svg>
                      ))}
                    </div>
                    <span class="text-sm text-gray-600">{company.data.rating.score} ({company.data.rating.reviews} reviews)</span>
                  </div>

                  <div class="border-t pt-4">
                    <div class="grid grid-cols-2 gap-4 mb-4">
                      <div>
                        <p class="text-xs text-gray-500 mb-1">Services</p>
                        <p class="text-sm text-gray-700">{company.data.services.length} types</p>
                      </div>
                      <div>
                        <p class="text-xs text-gray-500 mb-1">Coverage</p>
                        <p class="text-sm text-gray-700">{company.data.regions.length} regions</p>
                      </div>
                    </div>

                    <div class="flex space-x-2">
                      <a href={"/companies/" + company.data.id} class="flex-1 btn-primary text-center text-sm">
                        View Details
                      </a>
                      <button onclick="openModal('consultation-modal')" class="flex-1 btn-outline text-center text-sm">
                        Get Quote
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>

          <!-- No Results Message -->
          <div id="noResults" class="hidden bg-white rounded-xl shadow-lg p-12 text-center">
            <svg class="w-16 h-16 mx-auto text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
            <h3 class="text-xl font-bold text-gray-900 mb-2">No companies found</h3>
            <p class="text-gray-600">Try adjusting your filters or search criteria</p>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="py-16 bg-gradient-to-br from-primary-600 to-secondary-600 text-white">
    <div class="container">
      <div class="max-w-4xl mx-auto text-center">
        <h2 class="text-3xl md:text-4xl font-bold mb-6">
          Need Help Choosing?
        </h2>
        <p class="text-xl text-white/90 mb-8">
          Our relocation experts can help you find the perfect company for your specific needs and budget
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <button onclick="openModal('consultation-modal')" class="bg-white text-primary-600 px-8 py-4 rounded-xl font-semibold hover:bg-gray-100 transition-all duration-300">
            Get Expert Advice
          </button>
          <a href="/chat" class="bg-white/10 backdrop-blur-sm border-2 border-white/30 text-white px-8 py-4 rounded-xl font-semibold hover:bg-white/20 transition-all duration-300">
            Use AI Assistant
          </a>
        </div>
      </div>
    </div>
  </section>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const searchInput = document.getElementById('searchInput') as HTMLInputElement;
      const serviceFilters = document.querySelectorAll('.service-filter') as NodeListOf<HTMLInputElement>;
      const regionFilters = document.querySelectorAll('.region-filter') as NodeListOf<HTMLInputElement>;
      const languageFilters = document.querySelectorAll('.language-filter') as NodeListOf<HTMLInputElement>;
      const ratingFilter = document.getElementById('ratingFilter') as HTMLSelectElement;
      const sortSelect = document.getElementById('sortSelect') as HTMLSelectElement;
      const clearFiltersBtn = document.getElementById('clearFilters') as HTMLButtonElement;
      const companiesGrid = document.getElementById('companiesGrid') as HTMLElement;
      const resultsCount = document.getElementById('resultsCount') as HTMLElement;
      const noResults = document.getElementById('noResults') as HTMLElement;

      let allCards = Array.from(document.querySelectorAll('.company-card')) as HTMLElement[];

      function filterCompanies() {
        const searchTerm = searchInput.value.toLowerCase();
        const selectedServices = Array.from(serviceFilters).filter(f => f.checked).map(f => f.value.toLowerCase());
        const selectedRegions = Array.from(regionFilters).filter(f => f.checked).map(f => f.value.toLowerCase());
        const selectedLanguages = Array.from(languageFilters).filter(f => f.checked).map(f => f.value.toLowerCase());
        const minRating = parseFloat(ratingFilter.value) || 0;

        let visibleCount = 0;

        allCards.forEach(card => {
          const name = card.dataset.name || '';
          const services = card.dataset.services || '';
          const regions = card.dataset.regions || '';
          const languages = card.dataset.languages || '';
          const rating = parseFloat(card.dataset.rating || '0');

          let show = true;

          // Search filter
          if (searchTerm && !name.includes(searchTerm)) {
            show = false;
          }

          // Service filter
          if (selectedServices.length > 0 && !selectedServices.some(s => services.includes(s))) {
            show = false;
          }

          // Region filter
          if (selectedRegions.length > 0 && !selectedRegions.some(r => regions.includes(r))) {
            show = false;
          }

          // Language filter
          if (selectedLanguages.length > 0 && !selectedLanguages.some(l => languages.includes(l))) {
            show = false;
          }

          // Rating filter
          if (rating < minRating) {
            show = false;
          }

          card.style.display = show ? 'block' : 'none';
          if (show) visibleCount++;
        });

        resultsCount.textContent = visibleCount.toString();
        noResults.classList.toggle('hidden', visibleCount > 0);
        companiesGrid.classList.toggle('hidden', visibleCount === 0);
      }

      function sortCompanies() {
        const sortBy = sortSelect.value;
        
        allCards.sort((a, b) => {
          switch(sortBy) {
            case 'rating':
              return parseFloat(b.dataset.rating || '0') - parseFloat(a.dataset.rating || '0');
            case 'reviews':
              return parseInt(b.dataset.reviews || '0') - parseInt(a.dataset.reviews || '0');
            case 'name':
              return (a.dataset.name || '').localeCompare(b.dataset.name || '');
            case 'featured':
              const aFeatured = a.dataset.featured === 'true' ? 1 : 0;
              const bFeatured = b.dataset.featured === 'true' ? 1 : 0;
              return bFeatured - aFeatured;
            default:
              return 0;
          }
        });

        companiesGrid.innerHTML = '';
        allCards.forEach(card => companiesGrid.appendChild(card));
      }

      function clearAllFilters() {
        searchInput.value = '';
        serviceFilters.forEach(f => f.checked = false);
        regionFilters.forEach(f => f.checked = false);
        languageFilters.forEach(f => f.checked = false);
        ratingFilter.value = '';
        filterCompanies();
      }

      // Event listeners
      searchInput.addEventListener('input', filterCompanies);
      serviceFilters.forEach(f => f.addEventListener('change', filterCompanies));
      regionFilters.forEach(f => f.addEventListener('change', filterCompanies));
      languageFilters.forEach(f => f.addEventListener('change', filterCompanies));
      ratingFilter.addEventListener('change', filterCompanies);
      sortSelect.addEventListener('change', sortCompanies);
      clearFiltersBtn.addEventListener('click', clearAllFilters);

      // Initialize
      filterCompanies();
    });
  </script>
</Layout>