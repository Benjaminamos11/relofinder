---
import Layout from '../layouts/Layout.astro';
import { supabase } from '../lib/supabase';

const title = 'AI Relocation Assistant | ReloFinder.ch';
const description = 'Get instant answers to your Swiss relocation questions from our AI assistant. Expert guidance on visas, housing, and more.';

// Check if user is logged in
const { data: { session } } = await supabase.auth.getSession();
---

<Layout title={title} description={description}>
  <div class="min-h-screen bg-gradient-to-br from-accent-50 to-white py-12">
    <div class="container max-w-6xl mx-auto px-4">
      <!-- Header -->
      <div class="text-center mb-8">
        <h1 class="text-4xl md:text-5xl font-bold mb-4">Your Swiss Relocation Assistant</h1>
        <p class="text-xl text-accent-600 max-w-2xl mx-auto">
          Get expert guidance on your move to Switzerland. Ask about visas, housing, banking, schools, and more.
        </p>
      </div>

      <!-- Chat Interface -->
      <div class="bg-white rounded-xl shadow-xl overflow-hidden" x-data="chatInterface()">
        <div class="grid grid-cols-1 lg:grid-cols-12 min-h-[600px]">
          <!-- Sidebar -->
          <div class="lg:col-span-3 bg-accent-50/50 p-6 border-r border-accent-100">
            <div class="mb-6">
              <button 
                @click="startNewChat"
                class="w-full bg-white shadow-sm border border-accent-200 px-4 py-2 rounded-lg hover:bg-accent-50 transition-all text-accent-700 font-medium"
              >
                New Chat
              </button>
            </div>
            
            <div class="space-y-2">
              <h3 class="text-sm font-medium text-accent-600 mb-4">Popular Questions</h3>
              <button 
                @click="askQuestion('What documents do I need for a Swiss work visa?')"
                class="w-full text-left p-3 text-sm rounded-lg bg-white shadow-sm border border-accent-100 hover:border-accent-300 transition-all group"
              >
                <span class="block font-medium text-accent-800 mb-1">Visa Requirements</span>
                <span class="text-xs text-accent-500">Learn about work permit documentation</span>
              </button>
              <button 
                @click="askQuestion('How does the Swiss rental market work?')"
                class="w-full text-left p-3 text-sm rounded-lg bg-white shadow-sm border border-accent-100 hover:border-accent-300 transition-all group"
              >
                <span class="block font-medium text-accent-800 mb-1">Rental Market Guide</span>
                <span class="text-xs text-accent-500">Understanding housing in Switzerland</span>
              </button>
              <button 
                @click="askQuestion('What are the best areas to live in ZÃ¼rich?')"
                class="w-full text-left p-3 text-sm rounded-lg bg-white shadow-sm border border-accent-100 hover:border-accent-300 transition-all group"
              >
                <span class="block font-medium text-accent-800 mb-1">ZÃ¼rich Neighborhoods</span>
                <span class="text-xs text-accent-500">Compare areas and find your ideal location</span>
              </button>
              <button 
                @click="askQuestion('How does health insurance work in Switzerland?')"
                class="w-full text-left p-3 text-sm rounded-lg bg-white shadow-sm border border-accent-100 hover:border-accent-300 transition-all group"
              >
                <span class="block font-medium text-accent-800 mb-1">Healthcare Guide</span>
                <span class="text-xs text-accent-500">Navigate Swiss health insurance</span>
              </button>
            </div>
          </div>

          <!-- Main Chat Area -->
          <div class="lg:col-span-9 flex flex-col">
            <!-- Messages -->
            <div class="flex-1 p-4 overflow-y-auto space-y-4" id="chat-messages">
              <!-- Welcome Message -->
              <template x-if="messages.length === 0">
                <div class="bg-accent-50/50 p-6 rounded-xl">
                  <h2 class="text-xl font-semibold mb-3">ðŸ‘‹ Welcome to ReloFinder's AI Assistant!</h2>
                  <p class="text-accent-600 mb-4">
                    I'm here to help you with your relocation to Switzerland. I can provide information about:
                  </p>
                  <div class="grid grid-cols-2 gap-3">
                    <button class="text-left p-3 text-sm rounded-lg bg-white shadow-sm border border-accent-100 hover:border-accent-300 transition-all">
                      <span class="block font-medium text-accent-800 mb-1">Visa Process</span>
                      <span class="text-xs text-accent-500">Permits & documentation</span>
                    </button>
                    <button class="text-left p-3 text-sm rounded-lg bg-white shadow-sm border border-accent-100 hover:border-accent-300 transition-all">
                      <span class="block font-medium text-accent-800 mb-1">Housing Search</span>
                      <span class="text-xs text-accent-500">Find your new home</span>
                    </button>
                    <button class="text-left p-3 text-sm rounded-lg bg-white shadow-sm border border-accent-100 hover:border-accent-300 transition-all">
                      <span class="block font-medium text-accent-800 mb-1">Banking & Insurance</span>
                      <span class="text-xs text-accent-500">Financial setup</span>
                    </button>
                    <button class="text-left p-3 text-sm rounded-lg bg-white shadow-sm border border-accent-100 hover:border-accent-300 transition-all">
                      <span class="block font-medium text-accent-800 mb-1">Education</span>
                      <span class="text-xs text-accent-500">Schools & universities</span>
                    </button>
                  </div>
                </div>
              </template>

              <!-- Chat Messages -->
              <template x-for="message in messages" :key="message.id">
                <div :class="message.role === 'user' ? 'flex justify-end' : 'flex justify-start'">
                  <div
                    :class="message.role === 'user' 
                      ? 'bg-primary-600 text-white rounded-2xl rounded-tr-none max-w-[80%]' 
                      : 'bg-accent-50/50 text-accent-800 rounded-2xl rounded-tl-none max-w-[80%]'"
                    class="p-4 shadow-sm"
                  >
                    <div x-html="formatMessage(message.content)" class="prose prose-sm max-w-none"></div>
                  </div>
                </div>
              </template>

              <!-- Loading Indicator -->
              <template x-if="loading">
                <div class="flex justify-start">
                  <div class="bg-accent-50 rounded-r-xl rounded-tl-xl p-4 shadow-sm max-w-[80%]">
                    <div class="flex space-x-2">
                      <div class="w-2 h-2 bg-accent-400 rounded-full animate-bounce" style="animation-delay: 0ms"></div>
                      <div class="w-2 h-2 bg-accent-400 rounded-full animate-bounce" style="animation-delay: 150ms"></div>
                      <div class="w-2 h-2 bg-accent-400 rounded-full animate-bounce" style="animation-delay: 300ms"></div>
                    </div>
                  </div>
                </div>
              </template>
            </div>

            <!-- Input Form -->
            <div class="border-t p-4">
              <form @submit.prevent="sendMessage" class="flex gap-2">
                <input
                  type="text"
                  x-model="input"
                  placeholder="Type your message..."
                  class="flex-1 px-4 py-2 bg-accent-50/50 border border-accent-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
                  :disabled="loading"
                />
                <button 
                  type="submit"
                  class="bg-primary-600 text-white px-6 py-2 rounded-lg hover:bg-primary-700 disabled:opacity-50 transition-all flex-shrink-0 shadow-sm"
                  :disabled="loading || !input.trim()"
                >
                  Send
                </button>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { marked } from 'marked';
  import { mangle } from 'marked-mangle';
  import { gfmHeadingId } from 'marked-gfm-heading-id';
  import DOMPurify from 'dompurify';
  import Alpine from 'alpinejs';

  // Configure marked
  marked.use(mangle());
  marked.use(gfmHeadingId());
  
  marked.setOptions({
    breaks: true,
    gfm: true
  });

  // Configure DOMPurify
  DOMPurify.setConfig({
    ALLOWED_TAGS: [
      'p', 'br', 'b', 'i', 'em', 'strong', 'a', 'ul', 'ol', 'li',
      'h1', 'h2', 'h3', 'h4', 'code', 'pre', 'blockquote', 'hr',
      'table', 'thead', 'tbody', 'tr', 'th', 'td'
    ],
    ALLOWED_ATTR: ['href', 'target', 'class', 'id']
  });

  window.chatInterface = function() {
    return {
      messages: [],
      input: '',
      loading: false,
      error: null,
      
      formatMessage(content) {
        try {
          const html = marked(content);
          return DOMPurify.sanitize(html);
        } catch (error) {
          console.error('Error formatting message:', error);
          return content; // Fallback to plain text
        }
      },

      async sendMessage() {
        if (!this.input.trim() || this.loading) return;

        const userMessage = this.input.trim();
        this.messages.push({ 
          id: Date.now(), 
          role: 'user', 
          content: userMessage 
        });
        
        this.input = '';
        this.loading = true;
        this.scrollToBottom();

        try {
          const response = await fetch('/api/chat', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ message: userMessage })
          });

          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }

          const data = await response.json();
          
          if (data.error) {
            throw new Error(data.error);
          }

          this.messages.push({
            id: Date.now(),
            role: 'assistant',
            content: data.message
          });
        } catch (error) {
          console.error('Chat error:', error);
          this.messages.push({
            id: Date.now(),
            role: 'assistant',
            content: 'I apologize, but I encountered an error. Please try again.'
          });
        } finally {
          this.loading = false;
          this.scrollToBottom();
        }
      },

      scrollToBottom() {
        setTimeout(() => {
          const container = document.getElementById('chat-messages');
          container.scrollTop = container.scrollHeight;
        }, 100);
      },

      startNewChat() {
        this.messages = [];
        this.input = '';
        this.error = null;
      },

      askQuestion(question) {
        this.input = question;
        this.sendMessage();
      }
    };
  };

  window.Alpine = Alpine;
  Alpine.start();
</script>

<style>
  .prose {
    @apply text-current;
  }
  
  .prose h1 {
    @apply text-2xl font-bold mb-4 mt-6;
  }
  
  .prose h2 {
    @apply text-xl font-bold mb-3 mt-5;
  }
  
  .prose h3 {
    @apply text-lg font-bold mb-2 mt-4;
  }
  
  .prose a {
    @apply text-primary-600 hover:text-primary-700 font-medium no-underline border-b border-primary-200 hover:border-primary-600 transition-colors;
  }

  .prose code {
    @apply bg-accent-100/50 px-2 py-0.5 rounded-md text-sm font-mono text-accent-800;
  }

  .prose pre {
    @apply bg-accent-800 text-white p-4 rounded-lg overflow-x-auto my-4;
  }

  .prose blockquote {
    @apply border-l-4 border-primary-200 bg-primary-50/50 pl-4 py-2 rounded-r-lg italic my-4;
  }

  .prose ul {
    @apply list-disc pl-6 my-4 space-y-2;
  }

  .prose ol {
    @apply list-decimal pl-6 my-4 space-y-2;
  }

  .prose table {
    @apply w-full border-collapse my-4;
  }

  .prose th,
  .prose td {
    @apply border border-accent-200 px-4 py-2 text-sm;
  }

  .prose th {
    @apply bg-accent-50/50 font-medium;
  }

  .prose .btn {
    @apply inline-flex items-center px-4 py-2 rounded-lg font-medium text-white bg-primary-600 hover:bg-primary-700 transition-colors no-underline border-none;
  }

  .prose .contact-form {
    @apply bg-accent-50/50 p-6 rounded-xl border border-accent-200 my-4;
  }

  [x-cloak] {
    display: none !important;
  }
</style>