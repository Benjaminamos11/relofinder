---
import Layout from '../layouts/Layout.astro';

const title = 'AI Relocation Assistant | ReloFinder.ch';
const description = 'Get instant answers to your Swiss relocation questions from our AI assistant. Expert guidance on visas, housing, and more.';
---

<Layout title={title} description={description}>
  <div class="min-h-screen bg-gradient-to-br from-accent-50 to-white py-12">
    <div class="container max-w-6xl mx-auto px-4">
      <!-- Header -->
      <div class="text-center mb-12">
        <h1 class="text-4xl md:text-5xl font-bold mb-4">Your Swiss Relocation Assistant</h1>
        <p class="text-xl text-accent-600 max-w-2xl mx-auto">
          Get expert guidance on your move to Switzerland. Ask about visas, housing, banking, schools, and more.
        </p>
      </div>

      <!-- Chat Interface -->
      <div class="bg-white rounded-xl shadow-xl overflow-hidden" x-data="chatInterface()">
        <div class="grid grid-cols-1 lg:grid-cols-12 min-h-[600px]">
          <!-- Sidebar -->
          <div class="lg:col-span-3 bg-accent-50 p-4 border-r border-accent-100">
            <div class="mb-6">
              <button 
                @click="startNewChat"
                class="w-full bg-primary-600 text-white px-4 py-2 rounded-lg hover:bg-primary-700 transition-colors"
              >
                New Chat
              </button>
            </div>
            
            <div class="space-y-2">
              <h3 class="text-sm font-medium text-accent-600 mb-2">Suggested Topics</h3>
              <button 
                @click="askQuestion('What documents do I need for a Swiss work visa?')"
                class="w-full text-left px-3 py-2 text-sm rounded-lg hover:bg-white transition-colors"
              >
                📄 Visa Requirements
              </button>
              <button 
                @click="askQuestion('How does the Swiss rental market work?')"
                class="w-full text-left px-3 py-2 text-sm rounded-lg hover:bg-white transition-colors"
              >
                🏠 Finding Housing
              </button>
              <button 
                @click="askQuestion('What are the best areas to live in Zürich?')"
                class="w-full text-left px-3 py-2 text-sm rounded-lg hover:bg-white transition-colors"
              >
                🗺️ Best Neighborhoods
              </button>
              <button 
                @click="askQuestion('How does health insurance work in Switzerland?')"
                class="w-full text-left px-3 py-2 text-sm rounded-lg hover:bg-white transition-colors"
              >
                ⚕️ Healthcare System
              </button>
            </div>
          </div>

          <!-- Main Chat Area -->
          <div class="lg:col-span-9 flex flex-col">
            <!-- Messages -->
            <div class="flex-1 p-4 overflow-y-auto space-y-4" id="chat-messages">
              <!-- Welcome Message -->
              <template x-if="messages.length === 0">
                <div class="bg-accent-50 p-6 rounded-xl">
                  <h2 class="text-xl font-semibold mb-3">👋 Welcome to ReloFinder's AI Assistant!</h2>
                  <p class="text-accent-600 mb-4">
                    I'm here to help you with your relocation to Switzerland. I can provide information about:
                  </p>
                  <ul class="grid grid-cols-2 gap-3 text-sm">
                    <li class="flex items-center text-accent-600">
                      <span class="w-6">📄</span> Visa Process
                    </li>
                    <li class="flex items-center text-accent-600">
                      <span class="w-6">🏠</span> Housing Search
                    </li>
                    <li class="flex items-center text-accent-600">
                      <span class="w-6">🏦</span> Banking & Insurance
                    </li>
                    <li class="flex items-center text-accent-600">
                      <span class="w-6">🏫</span> Schools & Education
                    </li>
                    <li class="flex items-center text-accent-600">
                      <span class="w-6">🚂</span> Transportation
                    </li>
                    <li class="flex items-center text-accent-600">
                      <span class="w-6">📱</span> Daily Life
                    </li>
                  </ul>
                </div>
              </template>

              <!-- Chat Messages -->
              <template x-for="message in messages" :key="message.id">
                <div :class="message.role === 'user' ? 'flex justify-end' : 'flex justify-start'">
                  <div
                    :class="message.role === 'user' 
                      ? 'bg-primary-600 text-white rounded-l-xl rounded-tr-xl max-w-[80%]' 
                      : 'bg-accent-50 text-accent-800 rounded-r-xl rounded-tl-xl max-w-[80%]'"
                    class="p-4 shadow-sm"
                  >
                    <div x-html="formatMessage(message.content)" class="prose prose-sm max-w-none"></div>
                  </div>
                </div>
              </template>

              <!-- Loading Indicator -->
              <template x-if="loading">
                <div class="bg-accent-50 rounded-xl p-4 shadow-sm animate-pulse">
                  <div class="flex space-x-3">
                    <div class="w-3 h-3 bg-accent-300 rounded-full"></div>
                    <div class="w-3 h-3 bg-accent-300 rounded-full"></div>
                    <div class="w-3 h-3 bg-accent-300 rounded-full"></div>
                  </div>
                </div>
              </template>
            </div>

            <!-- Input Form -->
            <div class="border-t p-4 flex gap-2">
              <input
                type="text"
                x-model.trim="input"
                @keydown.enter.prevent="sendMessage"
                placeholder="Type your message..."
                class="flex-1 px-4 py-2 border border-accent-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
                :disabled="loading"
              />
              <button 
                @click="sendMessage()"
                class="bg-primary-600 text-white px-6 py-2 rounded-lg hover:bg-primary-700 disabled:opacity-50 transition-colors flex-shrink-0"
                :disabled="loading || !input.trim()"
              >
                Send
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { marked } from 'marked';
  import DOMPurify from 'dompurify';

  function chatInterface() {
    const state = {
      messages: [],
      input: '',
      loading: false,

      init() {
        // Configure marked for safe markdown rendering
        marked.setOptions({
          breaks: true,
          gfm: true
        });

        // Configure DOMPurify for safe HTML
        DOMPurify.setConfig({
          ALLOWED_TAGS: [
            'p', 'br', 'b', 'i', 'em', 'strong', 'a', 'ul', 'ol', 'li',
            'h1', 'h2', 'h3', 'h4', 'code', 'pre', 'blockquote', 'hr',
            'table', 'thead', 'tbody', 'tr', 'th', 'td'
          ],
          ALLOWED_ATTR: ['href', 'target', 'class']
        });
      },
      
      formatMessage(content) {
        // Convert markdown to HTML and sanitize
        const html = marked(content);
        return DOMPurify.sanitize(html);
      },

      async sendMessage(e) {
        if (e) e.preventDefault();
        if (!state.input.trim() || state.loading) return;

        const userMessage = this.input.trim();
        this.messages.push({ id: Date.now(), role: 'user', content: userMessage });
        this.input = '';
        this.loading = true;

        // Scroll to bottom
        setTimeout(() => {
          const container = document.getElementById('chat-messages');
          container.scrollTop = container.scrollHeight;
        });
        
        try {
          const response = await fetch('/api/chat', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ message: userMessage })
          });

          const data = await response.json();
          
          if (data.error) {
            throw new Error(data.error);
          }

          this.messages.push({
            id: Date.now(),
            role: 'assistant',
            content: data.message || 'I apologize, but I am unable to provide an answer at this moment.'
          });
        } catch (error) {
          console.error('Chat error:', error);
          this.messages.push({
            id: Date.now(),
            role: 'assistant',
            content: 'I apologize, but I encountered an error. Please try again.'
          });
        } finally {
          this.loading = false;
          // Scroll to bottom again after new message
          setTimeout(() => {
            const container = document.getElementById('chat-messages');
            container.scrollTop = container.scrollHeight;
          });
        }
      },

      startNewChat() {
        this.messages = [];
        this.input = '';
      },

      askQuestion(question) {
        this.input = question;
        this.sendMessage();
      }
    };

    return state;
  }
</script>

<script>
  import Alpine from 'alpinejs';
</script>

<style>
  .prose {
    @apply text-current;
  }
  
  .prose a {
    @apply text-primary-600 hover:text-primary-700 no-underline hover:underline;
  }

  .prose code {
    @apply bg-accent-100 px-1.5 py-0.5 rounded text-sm;
  }

  .prose pre {
    @apply bg-accent-800 text-white p-4 rounded-lg overflow-x-auto;
  }

  .prose blockquote {
    @apply border-l-4 border-accent-200 pl-4 italic;
  }

  .prose ul {
    @apply list-disc pl-6 mb-4;
  }

  .prose ol {
    @apply list-decimal pl-6 mb-4;
  }

  .prose table {
    @apply w-full border-collapse mb-4;
  }

  .prose th,
  .prose td {
    @apply border border-accent-200 px-4 py-2;
  }

  .prose th {
    @apply bg-accent-50;
  }

  [x-cloak] {
    display: none !important;
  }
</style>