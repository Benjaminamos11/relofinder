---
import Layout from './Layout.astro';

const { post } = Astro.props;
const { Content } = await post.render();

const title = post.data.title;
const description = post.data.description;
const author = post.data.author;
const publishDate = post.data.publishDate;
const readingTime = post.data.readingTime;
const heroImage = post.data.heroImage;
const category = post.data.category;
const tags = post.data.tags;
---

<Layout 
  title={title} 
  description={description}
  keywords={tags}
>
  <!-- Hero Section with Gradient -->
  <section class="relative bg-gradient-to-br from-red-50 via-white to-red-50 py-16 border-b-2 border-red-100">
    <div class="container max-w-6xl mx-auto px-4">
      <div class="max-w-4xl mx-auto text-center">
        <!-- Category Badge -->
        <div class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-gradient-to-r from-red-600 to-red-700 text-white text-sm font-semibold mb-6 shadow-lg">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
          </svg>
          {category}
        </div>
        
        <!-- Title with Red Accent -->
        <h1 class="text-4xl lg:text-5xl font-bold text-gray-900 mb-6 leading-tight">
          {title}
        </h1>
        
        <!-- Meta Bar -->
        <div class="flex flex-wrap items-center justify-center gap-6 text-sm text-gray-600 mb-8">
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
            </svg>
            {publishDate.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
          </div>
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
            {readingTime} min read
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Main Content Area -->
  <section class="py-12 bg-white">
    <div class="container max-w-6xl mx-auto px-4">
      <!-- Article Content with Custom Styling -->
      <article class="prose-custom max-w-none">
        <style>
          /* Reset blog-like styles and create page-like design */
          .prose-custom {
            @apply text-gray-800;
          }
          
          /* Headings with red accents */
          .prose-custom :global(h1) {
            @apply text-3xl md:text-4xl font-bold text-gray-900 mb-8 mt-12 first:mt-0;
            border-left: 6px solid #B61919;
            padding-left: 24px;
            background: linear-gradient(90deg, #fee2e2 0%, transparent 100%);
            padding-top: 12px;
            padding-bottom: 12px;
            border-radius: 0 8px 8px 0;
          }
          
          .prose-custom :global(h2) {
            @apply text-2xl md:text-3xl font-bold text-gray-900 mb-6 mt-10;
            border-left: 4px solid #B61919;
            padding-left: 20px;
          }
          
          .prose-custom :global(h3) {
            @apply text-xl md:text-2xl font-semibold text-gray-900 mb-4 mt-8;
            color: #B61919;
          }
          
          .prose-custom :global(h4) {
            @apply text-lg md:text-xl font-semibold text-gray-900 mb-3 mt-6;
          }
          
          /* Paragraphs in boxes */
          .prose-custom :global(p) {
            @apply text-base md:text-lg leading-relaxed mb-6 text-gray-700;
            padding: 16px;
            background: white;
            border-left: 2px solid #fee2e2;
          }
          
          /* Lists as cards */
          .prose-custom :global(ul) {
            @apply space-y-3 mb-8 list-none;
          }
          
          .prose-custom :global(ul li) {
            @apply bg-gray-50 rounded-lg p-4 border-l-4 border-red-200;
            position: relative;
            padding-left: 48px;
          }
          
          .prose-custom :global(ul li::before) {
            content: "âœ“";
            @apply absolute left-4 top-4 w-6 h-6 bg-gradient-to-r from-red-600 to-red-700 text-white rounded-full flex items-center justify-center text-sm font-bold;
            display: flex;
            align-items: center;
            justify-content: center;
          }
          
          .prose-custom :global(ol) {
            @apply space-y-3 mb-8;
            counter-reset: item;
            list-style: none;
          }
          
          .prose-custom :global(ol li) {
            @apply bg-white rounded-lg p-4 border border-gray-200 shadow-sm;
            position: relative;
            padding-left: 48px;
            counter-increment: item;
          }
          
          .prose-custom :global(ol li::before) {
            content: counter(item);
            @apply absolute left-4 top-4 w-6 h-6 bg-gradient-to-r from-red-600 to-red-700 text-white rounded-full flex items-center justify-center text-sm font-bold;
            display: flex;
            align-items: center;
            justify-content: center;
          }
          
          /* Links as buttons */
          .prose-custom :global(a) {
            @apply inline-flex items-center gap-2 text-red-600 font-semibold hover:text-red-700 no-underline;
            transition: all 0.2s;
          }
          
          .prose-custom :global(a:hover) {
            @apply underline;
          }
          
          /* Strong text with red color */
          .prose-custom :global(strong) {
            @apply text-red-700 font-bold;
          }
          
          /* Blockquotes as highlight boxes */
          .prose-custom :global(blockquote) {
            @apply border-l-4 border-red-600 bg-gradient-to-r from-red-50 to-white p-6 rounded-r-xl my-8 shadow-md;
          }
          
          .prose-custom :global(blockquote p) {
            @apply text-gray-900 font-medium text-lg mb-0 border-l-0 bg-transparent;
          }
          
          /* Tables as cards */
          .prose-custom :global(table) {
            @apply w-full border-collapse rounded-xl overflow-hidden shadow-lg my-8;
          }
          
          .prose-custom :global(thead) {
            @apply bg-gradient-to-r from-red-600 to-red-700;
          }
          
          .prose-custom :global(th) {
            @apply border-0 px-6 py-4 text-left font-bold text-white text-sm uppercase tracking-wide;
          }
          
          .prose-custom :global(td) {
            @apply border-0 px-6 py-4 text-gray-700 bg-white;
          }
          
          .prose-custom :global(tbody tr) {
            @apply border-b border-gray-100;
          }
          
          .prose-custom :global(tbody tr:nth-child(even)) {
            @apply bg-gray-50;
          }
          
          .prose-custom :global(tbody tr:hover) {
            @apply bg-red-50;
            transition: background 0.2s;
          }
          
          /* Code blocks as cards */
          .prose-custom :global(code) {
            @apply bg-gray-100 text-red-600 px-3 py-1 rounded-lg text-sm font-mono border border-gray-200;
          }
          
          .prose-custom :global(pre) {
            @apply bg-gray-900 text-gray-100 p-6 rounded-xl overflow-x-auto my-8 shadow-lg border-l-4 border-red-600;
          }
          
          .prose-custom :global(pre code) {
            @apply bg-transparent text-gray-100 p-0 border-0;
          }
          
          /* Horizontal rules */
          .prose-custom :global(hr) {
            @apply border-0 h-1 bg-gradient-to-r from-transparent via-red-300 to-transparent my-12;
          }
        </style>
        
        <Content />
      </article>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="py-16 bg-gradient-to-br from-gray-50 to-white border-t-2 border-gray-100">
    <div class="container max-w-6xl mx-auto px-4">
      <div class="bg-white rounded-2xl shadow-xl border-2 border-red-100 overflow-hidden">
        <div class="grid md:grid-cols-2 gap-8 p-8 md:p-12">
          <!-- Left: CTA Text -->
          <div class="flex flex-col justify-center">
            <h2 class="text-3xl font-bold text-gray-900 mb-4">Ready to Start Your Swiss Relocation?</h2>
            <p class="text-lg text-gray-600 mb-6">
              Connect with verified relocation companies and get free quotes for your move to Switzerland.
            </p>
            <div class="flex flex-col sm:flex-row gap-4">
              <a 
                href="/companies" 
                class="inline-flex items-center justify-center gap-2 px-6 py-4 bg-gradient-to-r from-red-600 to-red-700 text-white font-bold rounded-xl hover:shadow-lg transition-all"
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                </svg>
                Browse Companies
              </a>
              <a 
                href="/contact" 
                class="inline-flex items-center justify-center gap-2 px-6 py-4 bg-white border-2 border-gray-300 text-gray-700 font-bold rounded-xl hover:border-red-300 hover:bg-red-50 transition-all"
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z"/>
                </svg>
                Get Free Consultation
              </a>
            </div>
          </div>
          
          <!-- Right: Quick Links Box -->
          <div class="bg-gradient-to-br from-red-50 to-white rounded-xl p-6 border border-red-100">
            <h3 class="text-xl font-bold text-gray-900 mb-4 flex items-center gap-2">
              <svg class="w-5 h-5 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
              </svg>
              Quick Actions
            </h3>
            <div class="space-y-3">
              <a href="/services/housing" class="flex items-center gap-3 p-3 bg-white rounded-lg hover:shadow-md transition-all group">
                <div class="w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center group-hover:bg-red-200 transition-colors">
                  <svg class="w-5 h-5 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>
                  </svg>
                </div>
                <div class="flex-1">
                  <div class="font-semibold text-gray-900">Find Housing</div>
                  <div class="text-sm text-gray-600">Search for apartments & homes</div>
                </div>
              </a>
              
              <a href="/services/visa" class="flex items-center gap-3 p-3 bg-white rounded-lg hover:shadow-md transition-all group">
                <div class="w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center group-hover:bg-red-200 transition-colors">
                  <svg class="w-5 h-5 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
                  </svg>
                </div>
                <div class="flex-1">
                  <div class="font-semibold text-gray-900">Visa & Immigration</div>
                  <div class="text-sm text-gray-600">Get permit assistance</div>
                </div>
              </a>
              
              <a href="/corporate" class="flex items-center gap-3 p-3 bg-white rounded-lg hover:shadow-md transition-all group">
                <div class="w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center group-hover:bg-red-200 transition-colors">
                  <svg class="w-5 h-5 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h1a1 1 0 011 1v5m-4 0h4"/>
                  </svg>
                </div>
                <div class="flex-1">
                  <div class="font-semibold text-gray-900">Corporate Solutions</div>
                  <div class="text-sm text-gray-600">For HR & mobility teams</div>
                </div>
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Tags Section -->
  {tags && tags.length > 0 && (
    <section class="py-8 bg-gray-50 border-t border-gray-200">
      <div class="container max-w-6xl mx-auto px-4">
        <div class="flex flex-wrap items-center gap-3">
          <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"/>
          </svg>
          {tags.map((tag) => (
            <span class="px-4 py-2 bg-white border border-gray-200 rounded-full text-sm text-gray-700 hover:border-red-300 hover:text-red-700 transition-colors cursor-pointer">
              {tag}
            </span>
          ))}
        </div>
      </div>
    </section>
  )}
</Layout>

<script>
  // Add IDs to headings for anchor links
  document.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach(heading => {
    const text = heading.textContent || '';
    const id = text.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/^-|-$/g, '');
    if (id) {
      heading.id = id;
    }
  });
</script>
