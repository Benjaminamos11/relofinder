---
import Layout from './Layout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

// Extract headings for TOC
const headings = post.body.match(/^#{1,6}\s+.+$/gm) || [];
const toc = headings.map(heading => {
  const level = heading.match(/^#+/)[0].length;
  const text = heading.replace(/^#+\s+/, '');
  const id = text.toLowerCase().replace(/[^a-z0-9]+/g, '-');
  return { level, text, id };
});

const title = post.data.title;
const description = post.data.description;
const author = post.data.author;
const publishDate = post.data.publishDate;
const readingTime = post.data.readingTime;
const heroImage = post.data.heroImage;
const category = post.data.category;
const tags = post.data.tags;
const featured = post.data.featured;
const excerpt = post.data.excerpt;
---

<Layout 
  title={title} 
  description={description}
  keywords={tags}
>
  <!-- Hero Section -->
  <section class="relative bg-gradient-to-br from-gray-50 via-white to-gray-100 py-20">
    <div class="container max-w-6xl mx-auto px-4">
      <div class="text-center max-w-4xl mx-auto">
        <!-- Category Badge -->
        <div class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-gradient-to-r from-red-600 to-red-700 text-white text-sm font-semibold mb-6">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/>
          </svg>
          {category}
        </div>
        
        <!-- Title -->
        <h1 class="text-4xl lg:text-5xl font-bold text-gray-900 mb-6 leading-tight">
          {title}
        </h1>
        
        <!-- Excerpt -->
        <p class="text-xl text-gray-600 leading-relaxed mb-8">
          {excerpt}
        </p>
        
        <!-- Meta Info -->
        <div class="flex flex-wrap items-center justify-center gap-6 text-sm text-gray-500">
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
            </svg>
            {author}
          </div>
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
            </svg>
            {publishDate.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
          </div>
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
            {readingTime} min read
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Main Content -->
  <section class="py-16 bg-white">
    <div class="container max-w-6xl mx-auto px-4">
      <div class="grid lg:grid-cols-4 gap-12">
        
        <!-- Table of Contents - Compact -->
        <div class="lg:col-span-1">
          <div class="sticky top-8">
            <div class="bg-white rounded-xl border border-gray-200 shadow-sm p-6">
              <h3 class="text-lg font-bold text-gray-900 mb-4 flex items-center gap-2">
                <svg class="w-5 h-5 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"/>
                </svg>
                Contents
              </h3>
              <nav class="space-y-1">
                {toc.slice(0, 8).map((item) => (
                  <a 
                    href={`#${item.id}`}
                    class={`block py-2 px-3 rounded-lg text-sm transition-colors ${
                      item.level === 1 
                        ? 'font-semibold text-gray-900 hover:bg-red-50 hover:text-red-700' 
                        : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'
                    }`}
                    style={`margin-left: ${(item.level - 1) * 8}px`}
                  >
                    {item.text}
                  </a>
                ))}
                {toc.length > 8 && (
                  <button 
                    onclick="document.querySelectorAll('.toc-hidden').forEach(el => el.classList.toggle('hidden'))"
                    class="text-xs text-red-600 hover:text-red-700 font-medium mt-2"
                  >
                    Show {toc.length - 8} more...
                  </button>
                )}
                {toc.slice(8).map((item) => (
                  <a 
                    href={`#${item.id}`}
                    class="toc-hidden hidden block py-2 px-3 rounded-lg text-sm text-gray-600 hover:bg-gray-50 hover:text-gray-900 transition-colors"
                    style={`margin-left: ${(item.level - 1) * 8}px`}
                  >
                    {item.text}
                  </a>
                ))}
              </nav>
            </div>
          </div>
        </div>

        <!-- Article Content -->
        <article class="lg:col-span-3">
          <div class="prose prose-lg max-w-none">
            <!-- Custom styling for better readability -->
            <style>
              .prose h1 {
                @apply text-3xl font-bold text-gray-900 mb-6 mt-12 first:mt-0 border-b-2 border-red-200 pb-3;
              }
              .prose h2 {
                @apply text-2xl font-bold text-gray-900 mb-4 mt-10 border-l-4 border-red-600 pl-4;
              }
              .prose h3 {
                @apply text-xl font-semibold text-gray-900 mb-3 mt-8;
              }
              .prose h4 {
                @apply text-lg font-semibold text-gray-900 mb-2 mt-6;
              }
              .prose p {
                @apply text-gray-700 leading-relaxed mb-4;
              }
              .prose ul, .prose ol {
                @apply mb-6;
              }
              .prose li {
                @apply text-gray-700 mb-2;
              }
              .prose strong {
                @apply text-gray-900 font-semibold;
              }
              .prose a {
                @apply text-red-600 hover:text-red-700 font-medium no-underline hover:underline;
              }
              .prose blockquote {
                @apply border-l-4 border-red-200 bg-red-50 p-4 rounded-r-lg my-6;
              }
              .prose blockquote p {
                @apply text-gray-800 font-medium mb-0;
              }
              .prose table {
                @apply w-full border-collapse border border-gray-200 rounded-lg overflow-hidden my-6;
              }
              .prose th {
                @apply bg-gray-50 border border-gray-200 px-4 py-3 text-left font-semibold text-gray-900;
              }
              .prose td {
                @apply border border-gray-200 px-4 py-3 text-gray-700;
              }
              .prose tr:nth-child(even) {
                @apply bg-gray-50;
              }
              .prose code {
                @apply bg-gray-100 text-red-600 px-2 py-1 rounded text-sm font-mono;
              }
              .prose pre {
                @apply bg-gray-900 text-gray-100 p-4 rounded-lg overflow-x-auto my-6;
              }
              .prose pre code {
                @apply bg-transparent text-gray-100 p-0;
              }
            </style>
            
            <Content />
          </div>
        </article>
      </div>
    </div>
  </section>

  <!-- Tags Section -->
  <section class="py-12 bg-gray-50">
    <div class="container max-w-6xl mx-auto px-4">
      <div class="flex flex-wrap items-center gap-4">
        <span class="text-sm font-semibold text-gray-700">Tags:</span>
        {tags.map((tag) => (
          <span class="px-3 py-1 bg-white border border-gray-200 rounded-full text-sm text-gray-600 hover:border-red-300 hover:text-red-700 transition-colors">
            {tag}
          </span>
        ))}
      </div>
    </div>
  </section>

  <!-- Related Content -->
  <section class="py-16 bg-white">
    <div class="container max-w-6xl mx-auto px-4">
      <div class="text-center mb-12">
        <h2 class="text-3xl font-bold text-gray-900 mb-4">Continue Your Swiss Relocation Journey</h2>
        <p class="text-lg text-gray-600">Explore more resources to help with your move to Switzerland</p>
      </div>
      
      <div class="grid md:grid-cols-3 gap-8">
        <a href="/companies" class="group bg-white rounded-xl border border-gray-200 p-6 hover:shadow-lg transition-all">
          <div class="w-12 h-12 bg-gradient-to-r from-red-600 to-red-700 rounded-lg flex items-center justify-center mb-4 group-hover:scale-110 transition-transform">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h1a1 1 0 011 1v5m-4 0h4"/>
            </svg>
          </div>
          <h3 class="text-xl font-bold text-gray-900 mb-2 group-hover:text-red-600 transition-colors">Browse All Companies</h3>
          <p class="text-gray-600">Compare 50+ verified relocation companies with detailed profiles and reviews</p>
        </a>
        
        <a href="/services/housing" class="group bg-white rounded-xl border border-gray-200 p-6 hover:shadow-lg transition-all">
          <div class="w-12 h-12 bg-gradient-to-r from-red-600 to-red-700 rounded-lg flex items-center justify-center mb-4 group-hover:scale-110 transition-transform">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>
            </svg>
          </div>
          <h3 class="text-xl font-bold text-gray-900 mb-2 group-hover:text-red-600 transition-colors">Housing Services</h3>
          <p class="text-gray-600">Find apartments, homes, and property purchase assistance across Switzerland</p>
        </a>
        
        <a href="/contact" class="group bg-white rounded-xl border border-gray-200 p-6 hover:shadow-lg transition-all">
          <div class="w-12 h-12 bg-gradient-to-r from-red-600 to-red-700 rounded-lg flex items-center justify-center mb-4 group-hover:scale-110 transition-transform">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
            </svg>
          </div>
          <h3 class="text-xl font-bold text-gray-900 mb-2 group-hover:text-red-600 transition-colors">Get Free Consultation</h3>
          <p class="text-gray-600">Speak with our relocation experts for personalized guidance</p>
        </a>
      </div>
    </div>
  </section>
</Layout>

<script>
  // Smooth scrolling for TOC links
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const target = document.querySelector(this.getAttribute('href'));
      if (target) {
        target.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    });
  });

  // Add IDs to headings for TOC
  document.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach(heading => {
    const text = heading.textContent;
    const id = text.toLowerCase().replace(/[^a-z0-9]+/g, '-');
    heading.id = id;
  });
</script>
